import addDays from 'date-fns/addDays';
import addMonths from 'date-fns/addMonths';
import startOfMonth from 'date-fns/startOfMonth';
import endOfMonth from 'date-fns/endOfMonth';
import isSameMonth from 'date-fns/isSameMonth';
import locales from "../locales";

var createMonthDays = function createMonthDays(startDate) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ru';

  if (!startDate) {
    return [];
  }

  var date = startOfMonth(startDate);
  var _locales$locale = locales[locale],
      weekdaysOrdering = _locales$locale.weekdaysOrdering,
      months = _locales$locale.months;
  return Array.from({
    length: length
  }).map(function (_, i) {
    var days = [];
    var startDateOfMonth = startOfMonth(addMonths(date, i));
    var endDateOfMonth = endOfMonth(addMonths(date, i));
    var monthStr = months[startDateOfMonth.getMonth()];

    var _loop = function _loop() {
      var week = Array.from({
        length: 7
      });
      weekdaysOrdering.forEach(function (item, j) {
        if (!isSameMonth(endDateOfMonth, startDateOfMonth)) {
          return;
        }

        if (startDateOfMonth.getDay() === item) {
          week[j] = startDateOfMonth;
          startDateOfMonth = addDays(startDateOfMonth, 1);
        } else {
          week[j] = null;
        }
      });
      days.push(week);
    };

    while (isSameMonth(endDateOfMonth, startDateOfMonth)) {
      _loop();
    }

    return {
      monthStr: monthStr,
      days: days
    };
  });
};

export default createMonthDays;