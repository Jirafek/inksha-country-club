import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { PureComponent } from 'react';
import addMonths from 'date-fns/addMonths';
import endOfYear from 'date-fns/endOfYear';
import getDayOfYear from 'date-fns/getDayOfYear';
import isSameMonth from 'date-fns/isSameMonth';
import setDate from 'date-fns/setDate';
import subMonths from 'date-fns/subMonths';
import Month from "./month";
import ScrollArea from "./scrollArea";
import getMonthsOfYear from "./utils/getMonthsOfYear";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Months = /*#__PURE__*/function (_PureComponent) {
  _inherits(Months, _PureComponent);

  var _super = _createSuper(Months);

  function Months() {
    var _this;

    _classCallCheck(this, Months);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (deltaY) {
      var _this$props = _this.props,
          selected = _this$props.selected,
          onScroll = _this$props.onScroll;

      if (!selected) {
        return;
      }

      var nextSelected = deltaY > 0 ? subMonths(selected, 1) : addMonths(selected, 1);
      onScroll(nextSelected);
    });

    _defineProperty(_assertThisInitialized(_this), "isSelected", function (date) {
      var selected = _this.props.selected;

      if (!selected) {
        return false;
      }

      return isSameMonth(selected, date);
    });

    _defineProperty(_assertThisInitialized(_this), "getSelection", function (selected) {
      var _this$props2 = _this.props,
          calendarHeight = _this$props2.calendarHeight,
          offset = _this$props2.offset,
          space = _this$props2.space;

      if (!selected) {
        return [{}, {}];
      }

      var height = calendarHeight - 2 * space;
      var position = height * getDayOfYear(setDate(selected, 15)) / getDayOfYear(endOfYear(selected));
      var diff = space + position + offset - calendarHeight;
      return [{
        top: space,
        height: diff > 0 ? diff : 0
      }, {
        top: space + position - offset,
        height: Math.min(2 * offset, calendarHeight - (space + position - offset))
      }];
    });

    return _this;
  }

  _createClass(Months, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          selected = _this$props3.selected,
          isDisabled = _this$props3.isDisabled,
          onChange = _this$props3.onChange,
          locale = _this$props3.locale;
      var months = selected ? getMonthsOfYear(selected) : [];

      var _this$getSelection = this.getSelection(selected),
          _this$getSelection2 = _slicedToArray(_this$getSelection, 2),
          selectionTopStyles = _this$getSelection2[0],
          selectionBottomStyles = _this$getSelection2[1];

      return /*#__PURE__*/_jsxs(ScrollArea, {
        className: "n3__date-picker__months",
        onChange: this.handleChange,
        children: [/*#__PURE__*/_jsx("div", {
          className: "n3__date-picker__selection",
          style: selectionTopStyles
        }), months.map(function (value, i) {
          return /*#__PURE__*/_jsx(Month, {
            value: value,
            onChange: onChange,
            isCurrent: isSameMonth(value, new Date()),
            isDisabled: isDisabled(value, isSameMonth),
            isSelected: _this2.isSelected(value),
            locale: locale
          }, i);
        }), /*#__PURE__*/_jsx("div", {
          className: "n3__date-picker__selection",
          style: selectionBottomStyles
        })]
      });
    }
  }]);

  return Months;
}(PureComponent);

export default Months;