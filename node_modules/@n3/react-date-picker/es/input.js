import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["name", "hasFocus"];
import { useRef, useEffect } from 'react';
import cx from 'classnames';
import { jsx as _jsx } from "react/jsx-runtime";

var Input = function Input(_ref) {
  var name = _ref.name,
      hasFocus = _ref.hasFocus,
      props = _objectWithoutProperties(_ref, _excluded);

  var inputRef = useRef(null);
  var isFocusInput = typeof hasFocus === 'function' ? hasFocus(name) : hasFocus;
  useEffect(function () {
    var timeoutId = setTimeout(function () {
      var inputNode = inputRef.current;

      if (inputNode) {
        if (isFocusInput) {
          inputNode.focus();
        } else {
          inputNode.blur();
        }
      }
    }, 0);
    return function () {
      clearTimeout(timeoutId);
    };
  }, [isFocusInput]);
  return /*#__PURE__*/_jsx("input", _objectSpread({
    ref: inputRef,
    name: name,
    type: "text",
    className: cx('n3__date-picker__input', {
      'n3__date-picker__input_focus': isFocusInput
    })
  }, props));
};

Input.defaultProps = {
  autoComplete: 'off'
};
export default Input;