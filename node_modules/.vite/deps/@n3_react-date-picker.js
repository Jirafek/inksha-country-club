import {
  _arrayLikeToArray,
  _assertThisInitialized,
  _classCallCheck,
  _createClass,
  _createSuper,
  _defineProperty,
  _inherits,
  _typeof,
  _unsupportedIterableToArray,
  addDays,
  addMonths,
  addYears,
  buildFormatLongFn,
  buildLocalizeFn,
  buildMatchFn,
  buildMatchPatternFn,
  differenceInCalendarDays,
  en_US_default,
  endOfMonth,
  endOfYear,
  format,
  getTimezoneOffsetInMilliseconds,
  isAfter,
  isBefore,
  isSameDay,
  isSameMonth,
  isSameYear,
  isValid,
  parse,
  require_classnames,
  require_prop_types,
  require_warning,
  requiredArgs,
  startOfMonth,
  startOfUTCWeek,
  startOfWeek,
  startOfYear,
  subMonths,
  subYears,
  toDate,
  toInteger
} from "./chunk-HVD7EGAU.js";
import {
  arrow_default,
  computeStyles_default,
  eventListeners_default,
  flip_default,
  hide_default,
  offset_default,
  popperGenerator,
  popperOffsets_default,
  preventOverflow_default
} from "./chunk-E6JLXJIM.js";
import {
  require_react_dom
} from "./chunk-AHQIPYUF.js";
import {
  _extends
} from "./chunk-VQ5H4LKJ.js";
import {
  require_react
} from "./chunk-KRWLW7CN.js";
import {
  __commonJS,
  __toESM
} from "./chunk-QOVRSCHT.js";

// node_modules/invariant/browser.js
var require_browser = __commonJS({
  "node_modules/invariant/browser.js"(exports, module) {
    "use strict";
    var invariant3 = function(condition, format2, a, b, c, d, e, f) {
      if (true) {
        if (format2 === void 0) {
          throw new Error("invariant requires an error message argument");
        }
      }
      if (!condition) {
        var error;
        if (format2 === void 0) {
          error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format2.replace(/%s/g, function() {
            return args[argIndex++];
          }));
          error.name = "Invariant Violation";
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant3;
  }
});

// node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React9 = require_react();
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format2) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format2 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format2);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var assign = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match2 = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match2 && match2[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component4) {
          var prototype = Component4.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config, self) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type, key, ref, self, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type, config, maybeKey, source, self) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            if (maybeKey !== void 0) {
              {
                checkKeyStringCoercion(maybeKey);
              }
              key = "" + maybeKey;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            if (hasValidRef(config)) {
              ref = config.ref;
              warnIfStringRefCannotBeAutoConverted(config, self);
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
            if (type && type.defaultProps) {
              var defaultProps2 = type.defaultProps;
              for (propName in defaultProps2) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps2[propName];
                }
              }
            }
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement(object) {
          {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          {
            if (typeof node !== "object") {
              return;
            }
            if (isArray(node)) {
              for (var i = 0; i < node.length; i++) {
                var child = node[i];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes4;
            if (typeof type === "function") {
              propTypes4 = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes4 = type.propTypes;
            } else {
              return;
            }
            if (propTypes4) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes4, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
          {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
            var element = jsxDEV(type, props, key, source, self);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children = props.children;
              if (children !== void 0) {
                if (isStaticChildren) {
                  if (isArray(children)) {
                    for (var i = 0; i < children.length; i++) {
                      validateChildKeys(children[i], type);
                    }
                    if (Object.freeze) {
                      Object.freeze(children);
                    }
                  } else {
                    error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children, type);
                }
              }
            }
            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, false);
          }
        }
        var jsx = jsxWithValidationDynamic;
        var jsxs = jsxWithValidationStatic;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.jsx = jsx;
        exports.jsxs = jsxs;
      })();
    }
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_jsx_runtime_development();
    }
  }
});

// node_modules/@babel/runtime/helpers/esm/objectSpread2.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js
function _regeneratorRuntime() {
  "use strict";
  _regeneratorRuntime = function _regeneratorRuntime2() {
    return exports;
  };
  var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {
    obj[key] = desc.value;
  }, $Symbol = typeof Symbol == "function" ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define2(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn2, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn2.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {
  }
  function GeneratorFunction() {
  }
  function GeneratorFunctionPrototype() {
  }
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function() {
    return this;
  });
  var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type !== "throw") {
        var result = record.arg, value = result.value;
        return value && _typeof(value) == "object" && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function(value2) {
          invoke("next", value2, resolve, reject);
        }, function(err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function(unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function(error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function(resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function(method, arg) {
      if (state === "executing")
        throw new Error("Generator is already running");
      if (state === "completed") {
        if (method === "throw")
          throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg; ; ) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel)
              continue;
            return delegateResult;
          }
        }
        if (context.method === "next")
          context.sent = context._sent = context.arg;
        else if (context.method === "throw") {
          if (state === "suspendedStart")
            throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else
          context.method === "return" && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel)
            continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        record.type === "throw" && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method, method = delegate.iterator[methodName];
    if (method === void 0)
      return context.delegate = null, methodName === "throw" && delegate.iterator["return"] && (context.method = "return", context.arg = void 0, maybeInvokeDelegate(delegate, context), context.method === "throw") || methodName !== "return" && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if (record.type === "throw")
      return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, context.method !== "return" && (context.method = "next", context.arg = void 0), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(true);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod)
        return iteratorMethod.call(iterable);
      if (typeof iterable.next == "function")
        return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1, next = function next2() {
          for (; ++i < iterable.length; )
            if (hasOwn.call(iterable, i))
              return next2.value = iterable[i], next2.done = false, next2;
          return next2.value = void 0, next2.done = true, next2;
        };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: void 0,
      done: true
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: true
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: true
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun == "function" && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction");
  }, exports.mark = function(genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function(arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    PromiseImpl === void 0 && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function() {
    return this;
  }), define(Gp, "toString", function() {
    return "[object Generator]";
  }), exports.keys = function(val) {
    var object = Object(val), keys = [];
    for (var key in object)
      keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length; ) {
        var key2 = keys.pop();
        if (key2 in object)
          return next.value = key2, next.done = false, next;
      }
      return next.done = true, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !skipTempReset)
        for (var name in this)
          name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = void 0);
    },
    stop: function stop() {
      this.done = true;
      var rootRecord = this.tryEntries[0].completion;
      if (rootRecord.type === "throw")
        throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done)
        throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = void 0), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i], record = entry.completion;
        if (entry.tryLoc === "root")
          return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc)
              return handle(entry.catchLoc, true);
            if (this.prev < entry.finallyLoc)
              return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc)
              return handle(entry.catchLoc, true);
          } else {
            if (!hasFinally)
              throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc)
              return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw")
        throw record.arg;
      return record.type === "break" || record.type === "continue" ? this.next = record.arg : record.type === "return" ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : record.type === "normal" && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc)
          return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName,
        nextLoc
      }, this.method === "next" && (this.arg = void 0), ContinueSentinel;
    }
  }, exports;
}

// node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn2) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn2.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}

// node_modules/@n3/react-date-picker/es/index.js
var import_react34 = __toESM(require_react());

// node_modules/dom-helpers/esm/matches.js
var matchesImpl;
function matches(node, selector) {
  if (!matchesImpl) {
    var body = document.body;
    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;
    matchesImpl = function matchesImpl2(n, s) {
      return nativeMatch.call(n, s);
    };
  }
  return matchesImpl(node, selector);
}

// node_modules/dom-helpers/esm/querySelectorAll.js
var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);
function qsa(element, selector) {
  return toArray(element.querySelectorAll(selector));
}

// node_modules/dom-helpers/esm/canUseDOM.js
var canUseDOM_default = !!(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/dom-helpers/esm/addEventListener.js
var optionsSupported = false;
var onceSupported = false;
try {
  options = {
    get passive() {
      return optionsSupported = true;
    },
    get once() {
      return onceSupported = optionsSupported = true;
    }
  };
  if (canUseDOM_default) {
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, true);
  }
} catch (e) {
}
var options;
function addEventListener(node, eventName, handler, options) {
  if (options && typeof options !== "boolean" && !onceSupported) {
    var once = options.once, capture = options.capture;
    var wrappedHandler = handler;
    if (!onceSupported && once) {
      wrappedHandler = handler.__once || function onceHandler(event) {
        this.removeEventListener(eventName, onceHandler, capture);
        handler.call(this, event);
      };
      handler.__once = wrappedHandler;
    }
    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);
  }
  node.addEventListener(eventName, handler, options);
}
var addEventListener_default = addEventListener;

// node_modules/react-overlays/esm/Dropdown.js
var import_react17 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/uncontrollable/lib/esm/hook.js
var import_react = __toESM(require_react());

// node_modules/uncontrollable/lib/esm/utils.js
var import_invariant = __toESM(require_browser());

// node_modules/uncontrollable/lib/esm/hook.js
function useUncontrolledProp(propValue, defaultValue, handler) {
  var wasPropRef = (0, import_react.useRef)(propValue !== void 0);
  var _useState = (0, import_react.useState)(defaultValue), stateValue = _useState[0], setState = _useState[1];
  var isProp2 = propValue !== void 0;
  var wasProp = wasPropRef.current;
  wasPropRef.current = isProp2;
  if (!isProp2 && wasProp && stateValue !== defaultValue) {
    setState(defaultValue);
  }
  return [isProp2 ? propValue : stateValue, (0, import_react.useCallback)(function(value) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (handler)
      handler.apply(void 0, [value].concat(args));
    setState(value);
  }, [handler])];
}

// node_modules/uncontrollable/lib/esm/uncontrollable.js
var import_react2 = __toESM(require_react());

// node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

// node_modules/uncontrollable/lib/esm/uncontrollable.js
var import_invariant2 = __toESM(require_browser());

// node_modules/@restart/hooks/esm/usePrevious.js
var import_react3 = __toESM(require_react());
function usePrevious(value) {
  const ref = (0, import_react3.useRef)(null);
  (0, import_react3.useEffect)(() => {
    ref.current = value;
  });
  return ref.current;
}

// node_modules/@restart/hooks/esm/useForceUpdate.js
var import_react4 = __toESM(require_react());
function useForceUpdate() {
  const [, dispatch] = (0, import_react4.useReducer)((state) => !state, false);
  return dispatch;
}

// node_modules/@restart/hooks/esm/useEventListener.js
var import_react7 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useEventCallback.js
var import_react6 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useCommittedRef.js
var import_react5 = __toESM(require_react());
function useCommittedRef(value) {
  const ref = (0, import_react5.useRef)(value);
  (0, import_react5.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref;
}
var useCommittedRef_default = useCommittedRef;

// node_modules/@restart/hooks/esm/useEventCallback.js
function useEventCallback(fn2) {
  const ref = useCommittedRef_default(fn2);
  return (0, import_react6.useCallback)(function(...args) {
    return ref.current && ref.current(...args);
  }, [ref]);
}

// node_modules/@restart/hooks/esm/useEventListener.js
function useEventListener(eventTarget, event, listener, capture = false) {
  const handler = useEventCallback(listener);
  (0, import_react7.useEffect)(() => {
    const target = typeof eventTarget === "function" ? eventTarget() : eventTarget;
    target.addEventListener(event, handler, capture);
    return () => target.removeEventListener(event, handler, capture);
  }, [eventTarget]);
}

// node_modules/@restart/hooks/esm/useGlobalListener.js
var import_react8 = __toESM(require_react());
function useGlobalListener(event, handler, capture = false) {
  const documentTarget = (0, import_react8.useCallback)(() => document, []);
  return useEventListener(documentTarget, event, handler, capture);
}

// node_modules/react-overlays/esm/DropdownContext.js
var import_react9 = __toESM(require_react());
var DropdownContext = import_react9.default.createContext(null);
var DropdownContext_default = DropdownContext;

// node_modules/react-overlays/esm/DropdownMenu.js
var import_prop_types = __toESM(require_prop_types());
var import_react15 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useCallbackRef.js
var import_react10 = __toESM(require_react());
function useCallbackRef() {
  return (0, import_react10.useState)(null);
}

// node_modules/react-overlays/esm/usePopper.js
var import_react13 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useSafeState.js
var import_react12 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useMounted.js
var import_react11 = __toESM(require_react());
function useMounted() {
  const mounted = (0, import_react11.useRef)(true);
  const isMounted = (0, import_react11.useRef)(() => mounted.current);
  (0, import_react11.useEffect)(() => {
    mounted.current = true;
    return () => {
      mounted.current = false;
    };
  }, []);
  return isMounted.current;
}

// node_modules/@restart/hooks/esm/useSafeState.js
function useSafeState(state) {
  const isMounted = useMounted();
  return [state[0], (0, import_react12.useCallback)((nextState) => {
    if (!isMounted())
      return;
    return state[1](nextState);
  }, [isMounted, state[1]])];
}
var useSafeState_default = useSafeState;

// node_modules/react-overlays/esm/popper.js
var createPopper2 = popperGenerator({
  defaultModifiers: [hide_default, popperOffsets_default, computeStyles_default, eventListeners_default, offset_default, flip_default, preventOverflow_default, arrow_default]
});

// node_modules/react-overlays/esm/usePopper.js
var initialPopperStyles = function initialPopperStyles2(position) {
  return {
    position,
    top: "0",
    left: "0",
    opacity: "0",
    pointerEvents: "none"
  };
};
var disabledApplyStylesModifier = {
  name: "applyStyles",
  enabled: false
};
var ariaDescribedByModifier = {
  name: "ariaDescribedBy",
  enabled: true,
  phase: "afterWrite",
  effect: function effect(_ref) {
    var state = _ref.state;
    return function() {
      var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper;
      if ("removeAttribute" in reference) {
        var ids = (reference.getAttribute("aria-describedby") || "").split(",").filter(function(id) {
          return id.trim() !== popper.id;
        });
        if (!ids.length)
          reference.removeAttribute("aria-describedby");
        else
          reference.setAttribute("aria-describedby", ids.join(","));
      }
    };
  },
  fn: function fn(_ref2) {
    var _popper$getAttribute;
    var state = _ref2.state;
    var _state$elements2 = state.elements, popper = _state$elements2.popper, reference = _state$elements2.reference;
    var role = (_popper$getAttribute = popper.getAttribute("role")) == null ? void 0 : _popper$getAttribute.toLowerCase();
    if (popper.id && role === "tooltip" && "setAttribute" in reference) {
      var ids = reference.getAttribute("aria-describedby");
      if (ids && ids.split(",").indexOf(popper.id) !== -1) {
        return;
      }
      reference.setAttribute("aria-describedby", ids ? ids + "," + popper.id : popper.id);
    }
  }
};
var EMPTY_MODIFIERS = [];
function usePopper(referenceElement, popperElement, _temp) {
  var _ref3 = _temp === void 0 ? {} : _temp, _ref3$enabled = _ref3.enabled, enabled = _ref3$enabled === void 0 ? true : _ref3$enabled, _ref3$placement = _ref3.placement, placement = _ref3$placement === void 0 ? "bottom" : _ref3$placement, _ref3$strategy = _ref3.strategy, strategy = _ref3$strategy === void 0 ? "absolute" : _ref3$strategy, _ref3$modifiers = _ref3.modifiers, modifiers2 = _ref3$modifiers === void 0 ? EMPTY_MODIFIERS : _ref3$modifiers, config = _objectWithoutPropertiesLoose(_ref3, ["enabled", "placement", "strategy", "modifiers"]);
  var popperInstanceRef = (0, import_react13.useRef)();
  var update = (0, import_react13.useCallback)(function() {
    var _popperInstanceRef$cu;
    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();
  }, []);
  var forceUpdate = (0, import_react13.useCallback)(function() {
    var _popperInstanceRef$cu2;
    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();
  }, []);
  var _useSafeState = useSafeState_default((0, import_react13.useState)({
    placement,
    update,
    forceUpdate,
    attributes: {},
    styles: {
      popper: initialPopperStyles(strategy),
      arrow: {}
    }
  })), popperState = _useSafeState[0], setState = _useSafeState[1];
  var updateModifier = (0, import_react13.useMemo)(function() {
    return {
      name: "updateStateModifier",
      enabled: true,
      phase: "write",
      requires: ["computeStyles"],
      fn: function fn2(_ref4) {
        var state = _ref4.state;
        var styles = {};
        var attributes = {};
        Object.keys(state.elements).forEach(function(element) {
          styles[element] = state.styles[element];
          attributes[element] = state.attributes[element];
        });
        setState({
          state,
          styles,
          attributes,
          update,
          forceUpdate,
          placement: state.placement
        });
      }
    };
  }, [update, forceUpdate, setState]);
  (0, import_react13.useEffect)(function() {
    if (!popperInstanceRef.current || !enabled)
      return;
    popperInstanceRef.current.setOptions({
      placement,
      strategy,
      modifiers: [].concat(modifiers2, [updateModifier, disabledApplyStylesModifier])
    });
  }, [strategy, placement, updateModifier, enabled]);
  (0, import_react13.useEffect)(function() {
    if (!enabled || referenceElement == null || popperElement == null) {
      return void 0;
    }
    popperInstanceRef.current = createPopper2(referenceElement, popperElement, _extends({}, config, {
      placement,
      strategy,
      modifiers: [].concat(modifiers2, [ariaDescribedByModifier, updateModifier])
    }));
    return function() {
      if (popperInstanceRef.current != null) {
        popperInstanceRef.current.destroy();
        popperInstanceRef.current = void 0;
        setState(function(s) {
          return _extends({}, s, {
            attributes: {},
            styles: {
              popper: initialPopperStyles(strategy)
            }
          });
        });
      }
    };
  }, [enabled, referenceElement, popperElement]);
  return popperState;
}
var usePopper_default = usePopper;

// node_modules/dom-helpers/esm/contains.js
function contains(context, node) {
  if (context.contains)
    return context.contains(node);
  if (context.compareDocumentPosition)
    return context === node || !!(context.compareDocumentPosition(node) & 16);
}

// node_modules/dom-helpers/esm/removeEventListener.js
function removeEventListener(node, eventName, handler, options) {
  var capture = options && typeof options !== "boolean" ? options.capture : options;
  node.removeEventListener(eventName, handler, capture);
  if (handler.__once) {
    node.removeEventListener(eventName, handler.__once, capture);
  }
}
var removeEventListener_default = removeEventListener;

// node_modules/dom-helpers/esm/listen.js
function listen(node, eventName, handler, options) {
  addEventListener_default(node, eventName, handler, options);
  return function() {
    removeEventListener_default(node, eventName, handler, options);
  };
}
var listen_default = listen;

// node_modules/react-overlays/esm/useRootClose.js
var import_react14 = __toESM(require_react());
var import_warning = __toESM(require_warning());

// node_modules/dom-helpers/esm/ownerDocument.js
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

// node_modules/react-overlays/esm/safeFindDOMNode.js
var import_react_dom = __toESM(require_react_dom());
function safeFindDOMNode(componentOrElement) {
  if (componentOrElement && "setState" in componentOrElement) {
    return import_react_dom.default.findDOMNode(componentOrElement);
  }
  return componentOrElement != null ? componentOrElement : null;
}

// node_modules/react-overlays/esm/ownerDocument.js
var ownerDocument_default = function(componentOrElement) {
  return ownerDocument(safeFindDOMNode(componentOrElement));
};

// node_modules/react-overlays/esm/useRootClose.js
var escapeKeyCode = 27;
var noop = function noop2() {
};
function isLeftClickEvent(event) {
  return event.button === 0;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
var getRefTarget = function getRefTarget2(ref) {
  return ref && ("current" in ref ? ref.current : ref);
};
function useRootClose(ref, onRootClose, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, disabled = _ref.disabled, _ref$clickTrigger = _ref.clickTrigger, clickTrigger = _ref$clickTrigger === void 0 ? "click" : _ref$clickTrigger;
  var preventMouseRootCloseRef = (0, import_react14.useRef)(false);
  var onClose2 = onRootClose || noop;
  var handleMouseCapture = (0, import_react14.useCallback)(function(e) {
    var _e$composedPath$;
    var currentTarget = getRefTarget(ref);
    (0, import_warning.default)(!!currentTarget, "RootClose captured a close event but does not have a ref to compare it to. useRootClose(), should be passed a ref that resolves to a DOM node");
    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, (_e$composedPath$ = e.composedPath == null ? void 0 : e.composedPath()[0]) != null ? _e$composedPath$ : e.target);
  }, [ref]);
  var handleMouse = useEventCallback(function(e) {
    if (!preventMouseRootCloseRef.current) {
      onClose2(e);
    }
  });
  var handleKeyUp = useEventCallback(function(e) {
    if (e.keyCode === escapeKeyCode) {
      onClose2(e);
    }
  });
  (0, import_react14.useEffect)(function() {
    if (disabled || ref == null)
      return void 0;
    var currentEvent = window.event;
    var doc = ownerDocument_default(getRefTarget(ref));
    var removeMouseCaptureListener = listen_default(doc, clickTrigger, handleMouseCapture, true);
    var removeMouseListener = listen_default(doc, clickTrigger, function(e) {
      if (e === currentEvent) {
        currentEvent = void 0;
        return;
      }
      handleMouse(e);
    });
    var removeKeyupListener = listen_default(doc, "keyup", function(e) {
      if (e === currentEvent) {
        currentEvent = void 0;
        return;
      }
      handleKeyUp(e);
    });
    var mobileSafariHackListeners = [];
    if ("ontouchstart" in doc.documentElement) {
      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function(el) {
        return listen_default(el, "mousemove", noop);
      });
    }
    return function() {
      removeMouseCaptureListener();
      removeMouseListener();
      removeKeyupListener();
      mobileSafariHackListeners.forEach(function(remove) {
        return remove();
      });
    };
  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);
}
var useRootClose_default = useRootClose;

// node_modules/react-overlays/esm/mergeOptionsWithPopperConfig.js
function toModifierMap(modifiers2) {
  var result = {};
  if (!Array.isArray(modifiers2)) {
    return modifiers2 || result;
  }
  modifiers2 == null ? void 0 : modifiers2.forEach(function(m) {
    result[m.name] = m;
  });
  return result;
}
function toModifierArray(map) {
  if (map === void 0) {
    map = {};
  }
  if (Array.isArray(map))
    return map;
  return Object.keys(map).map(function(k) {
    map[k].name = k;
    return map[k];
  });
}
function mergeOptionsWithPopperConfig(_ref) {
  var _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;
  var enabled = _ref.enabled, enableEvents = _ref.enableEvents, placement = _ref.placement, flip = _ref.flip, offset = _ref.offset, fixed = _ref.fixed, containerPadding = _ref.containerPadding, arrowElement = _ref.arrowElement, _ref$popperConfig = _ref.popperConfig, popperConfig = _ref$popperConfig === void 0 ? {} : _ref$popperConfig;
  var modifiers2 = toModifierMap(popperConfig.modifiers);
  return _extends({}, popperConfig, {
    placement,
    enabled,
    strategy: fixed ? "fixed" : popperConfig.strategy,
    modifiers: toModifierArray(_extends({}, modifiers2, {
      eventListeners: {
        enabled: enableEvents
      },
      preventOverflow: _extends({}, modifiers2.preventOverflow, {
        options: containerPadding ? _extends({
          padding: containerPadding
        }, (_modifiers$preventOve = modifiers2.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers2.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options
      }),
      offset: {
        options: _extends({
          offset
        }, (_modifiers$offset = modifiers2.offset) == null ? void 0 : _modifiers$offset.options)
      },
      arrow: _extends({}, modifiers2.arrow, {
        enabled: !!arrowElement,
        options: _extends({}, (_modifiers$arrow = modifiers2.arrow) == null ? void 0 : _modifiers$arrow.options, {
          element: arrowElement
        })
      }),
      flip: _extends({
        enabled: !!flip
      }, modifiers2.flip)
    }))
  });
}

// node_modules/react-overlays/esm/DropdownMenu.js
var noop3 = function noop4() {
};
function useDropdownMenu(options) {
  if (options === void 0) {
    options = {};
  }
  var context = (0, import_react15.useContext)(DropdownContext_default);
  var _useCallbackRef = useCallbackRef(), arrowElement = _useCallbackRef[0], attachArrowRef = _useCallbackRef[1];
  var hasShownRef = (0, import_react15.useRef)(false);
  var _options = options, flip = _options.flip, offset = _options.offset, rootCloseEvent = _options.rootCloseEvent, _options$fixed = _options.fixed, fixed = _options$fixed === void 0 ? false : _options$fixed, _options$popperConfig = _options.popperConfig, popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig, _options$usePopper = _options.usePopper, shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;
  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;
  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;
  if (show && !hasShownRef.current) {
    hasShownRef.current = true;
  }
  var handleClose = function handleClose2(e) {
    context == null ? void 0 : context.toggle(false, e);
  };
  var _ref = context || {}, drop = _ref.drop, setMenu = _ref.setMenu, menuElement = _ref.menuElement, toggleElement = _ref.toggleElement;
  var placement = alignEnd ? "bottom-end" : "bottom-start";
  if (drop === "up")
    placement = alignEnd ? "top-end" : "top-start";
  else if (drop === "right")
    placement = alignEnd ? "right-end" : "right-start";
  else if (drop === "left")
    placement = alignEnd ? "left-end" : "left-start";
  var popper = usePopper_default(toggleElement, menuElement, mergeOptionsWithPopperConfig({
    placement,
    enabled: !!(shouldUsePopper && show),
    enableEvents: show,
    offset,
    flip,
    fixed,
    arrowElement,
    popperConfig
  }));
  var menuProps = _extends({
    ref: setMenu || noop3,
    "aria-labelledby": toggleElement == null ? void 0 : toggleElement.id
  }, popper.attributes.popper, {
    style: popper.styles.popper
  });
  var metadata = {
    show,
    alignEnd,
    hasShown: hasShownRef.current,
    toggle: context == null ? void 0 : context.toggle,
    popper: shouldUsePopper ? popper : null,
    arrowProps: shouldUsePopper ? _extends({
      ref: attachArrowRef
    }, popper.attributes.arrow, {
      style: popper.styles.arrow
    }) : {}
  };
  useRootClose_default(menuElement, handleClose, {
    clickTrigger: rootCloseEvent,
    disabled: !show
  });
  return [menuProps, metadata];
}
var propTypes = {
  children: import_prop_types.default.func.isRequired,
  show: import_prop_types.default.bool,
  alignEnd: import_prop_types.default.bool,
  flip: import_prop_types.default.bool,
  usePopper: import_prop_types.default.oneOf([true, false]),
  popperConfig: import_prop_types.default.object,
  rootCloseEvent: import_prop_types.default.string
};
var defaultProps = {
  usePopper: true
};
function DropdownMenu(_ref2) {
  var children = _ref2.children, options = _objectWithoutPropertiesLoose(_ref2, ["children"]);
  var _useDropdownMenu = useDropdownMenu(options), props = _useDropdownMenu[0], meta = _useDropdownMenu[1];
  return import_react15.default.createElement(import_react15.default.Fragment, null, meta.hasShown ? children(props, meta) : null);
}
DropdownMenu.displayName = "ReactOverlaysDropdownMenu";
DropdownMenu.propTypes = propTypes;
DropdownMenu.defaultProps = defaultProps;
var DropdownMenu_default = DropdownMenu;

// node_modules/react-overlays/esm/DropdownToggle.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react16 = __toESM(require_react());
var noop5 = function noop6() {
};
function useDropdownToggle() {
  var _ref = (0, import_react16.useContext)(DropdownContext_default) || {}, _ref$show = _ref.show, show = _ref$show === void 0 ? false : _ref$show, _ref$toggle = _ref.toggle, toggle = _ref$toggle === void 0 ? noop5 : _ref$toggle, setToggle = _ref.setToggle;
  var handleClick = (0, import_react16.useCallback)(function(e) {
    toggle(!show, e);
  }, [show, toggle]);
  return [{
    ref: setToggle || noop5,
    onClick: handleClick,
    "aria-haspopup": true,
    "aria-expanded": !!show
  }, {
    show,
    toggle
  }];
}
var propTypes2 = {
  children: import_prop_types2.default.func.isRequired
};
function DropdownToggle(_ref2) {
  var children = _ref2.children;
  var _useDropdownToggle = useDropdownToggle(), props = _useDropdownToggle[0], meta = _useDropdownToggle[1];
  return import_react16.default.createElement(import_react16.default.Fragment, null, children(props, meta));
}
DropdownToggle.displayName = "ReactOverlaysDropdownToggle";
DropdownToggle.propTypes = propTypes2;
var DropdownToggle_default = DropdownToggle;

// node_modules/react-overlays/esm/Dropdown.js
var propTypes3 = {
  children: import_prop_types3.default.node,
  drop: import_prop_types3.default.oneOf(["up", "left", "right", "down"]),
  focusFirstItemOnShow: import_prop_types3.default.oneOf([false, true, "keyboard"]),
  itemSelector: import_prop_types3.default.string,
  alignEnd: import_prop_types3.default.bool,
  show: import_prop_types3.default.bool,
  defaultShow: import_prop_types3.default.bool,
  onToggle: import_prop_types3.default.func
};
function useRefWithUpdate() {
  var forceUpdate = useForceUpdate();
  var ref = (0, import_react17.useRef)(null);
  var attachRef = (0, import_react17.useCallback)(function(element) {
    ref.current = element;
    forceUpdate();
  }, [forceUpdate]);
  return [ref, attachRef];
}
function Dropdown(_ref) {
  var drop = _ref.drop, alignEnd = _ref.alignEnd, defaultShow = _ref.defaultShow, rawShow = _ref.show, rawOnToggle = _ref.onToggle, _ref$itemSelector = _ref.itemSelector, itemSelector = _ref$itemSelector === void 0 ? "* > *" : _ref$itemSelector, focusFirstItemOnShow = _ref.focusFirstItemOnShow, children = _ref.children;
  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle), show = _useUncontrolledProp[0], onToggle = _useUncontrolledProp[1];
  var _useRefWithUpdate = useRefWithUpdate(), menuRef = _useRefWithUpdate[0], setMenu = _useRefWithUpdate[1];
  var menuElement = menuRef.current;
  var _useRefWithUpdate2 = useRefWithUpdate(), toggleRef = _useRefWithUpdate2[0], setToggle = _useRefWithUpdate2[1];
  var toggleElement = toggleRef.current;
  var lastShow = usePrevious(show);
  var lastSourceEvent = (0, import_react17.useRef)(null);
  var focusInDropdown = (0, import_react17.useRef)(false);
  var toggle = (0, import_react17.useCallback)(function(nextShow, event) {
    onToggle(nextShow, event);
  }, [onToggle]);
  var context = (0, import_react17.useMemo)(function() {
    return {
      toggle,
      drop,
      show,
      alignEnd,
      menuElement,
      toggleElement,
      setMenu,
      setToggle
    };
  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);
  if (menuElement && lastShow && !show) {
    focusInDropdown.current = menuElement.contains(document.activeElement);
  }
  var focusToggle = useEventCallback(function() {
    if (toggleElement && toggleElement.focus) {
      toggleElement.focus();
    }
  });
  var maybeFocusFirst = useEventCallback(function() {
    var type = lastSourceEvent.current;
    var focusType = focusFirstItemOnShow;
    if (focusType == null) {
      focusType = menuRef.current && matches(menuRef.current, "[role=menu]") ? "keyboard" : false;
    }
    if (focusType === false || focusType === "keyboard" && !/^key.+$/.test(type)) {
      return;
    }
    var first = qsa(menuRef.current, itemSelector)[0];
    if (first && first.focus)
      first.focus();
  });
  (0, import_react17.useEffect)(function() {
    if (show)
      maybeFocusFirst();
    else if (focusInDropdown.current) {
      focusInDropdown.current = false;
      focusToggle();
    }
  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);
  (0, import_react17.useEffect)(function() {
    lastSourceEvent.current = null;
  });
  var getNextFocusedChild = function getNextFocusedChild2(current, offset) {
    if (!menuRef.current)
      return null;
    var items = qsa(menuRef.current, itemSelector);
    var index = items.indexOf(current) + offset;
    index = Math.max(0, Math.min(index, items.length));
    return items[index];
  };
  useGlobalListener("keydown", function(event) {
    var _menuRef$current, _toggleRef$current;
    var key = event.key;
    var target = event.target;
    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);
    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target);
    var isInput = /input|textarea/i.test(target.tagName);
    if (isInput && (key === " " || key !== "Escape" && fromMenu)) {
      return;
    }
    if (!fromMenu && !fromToggle) {
      return;
    }
    if (!menuRef.current && key === "Tab") {
      return;
    }
    lastSourceEvent.current = event.type;
    switch (key) {
      case "ArrowUp": {
        var next = getNextFocusedChild(target, -1);
        if (next && next.focus)
          next.focus();
        event.preventDefault();
        return;
      }
      case "ArrowDown":
        event.preventDefault();
        if (!show) {
          onToggle(true, event);
        } else {
          var _next = getNextFocusedChild(target, 1);
          if (_next && _next.focus)
            _next.focus();
        }
        return;
      case "Tab":
        addEventListener_default(document, "keyup", function(e) {
          var _menuRef$current2;
          if (e.key === "Tab" && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {
            onToggle(false, event);
          }
        }, {
          once: true
        });
        break;
      case "Escape":
        event.preventDefault();
        event.stopPropagation();
        onToggle(false, event);
        break;
      default:
    }
  });
  return import_react17.default.createElement(DropdownContext_default.Provider, {
    value: context
  }, children);
}
Dropdown.displayName = "ReactOverlaysDropdown";
Dropdown.propTypes = propTypes3;
Dropdown.Menu = DropdownMenu_default;
Dropdown.Toggle = DropdownToggle_default;
var Dropdown_default = Dropdown;

// node_modules/@n3/react-date-picker/es/index.js
var import_classnames8 = __toESM(require_classnames());

// node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}

// node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
    try {
      if (_x = (_i = _i.call(arr)).next, i === 0) {
        if (Object(_i) !== _i)
          return;
        _n = false;
      } else
        for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
          ;
    } catch (err) {
      _d = true, _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null && (_r = _i["return"](), Object(_r) !== _r))
          return;
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}

// node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

// node_modules/@n3/react-date-picker/es/field.js
var import_react18 = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
function FieldInner(_ref) {
  var range = _ref.range, startDate = _ref.startDate, endDate = _ref.endDate, canClear = _ref.canClear, displayFormat3 = _ref.displayFormat, locale2 = _ref.locale, onClear = _ref.onClear;
  var onClearHandler = (0, import_react18.useCallback)(function(event) {
    event.stopPropagation();
    onClear(event);
  }, [onClear]);
  var _useDropdownToggle = useDropdownToggle(), _useDropdownToggle2 = _slicedToArray(_useDropdownToggle, 2), toggleProps = _useDropdownToggle2[0], _useDropdownToggle2$ = _useDropdownToggle2[1], toggle = _useDropdownToggle2$.toggle, show = _useDropdownToggle2$.show;
  var onClick = (0, import_react18.useCallback)(function(event) {
    toggle(!show, event);
  }, [show, toggle]);
  return (0, import_jsx_runtime3.jsxs)("div", _objectSpread2(_objectSpread2({
    role: "button",
    className: "n3__date-picker-field",
    onKeyDown: onClick,
    tabIndex: 0
  }, toggleProps), {}, {
    children: [(0, import_jsx_runtime3.jsxs)("div", {
      className: "n3__date-picker-field__labels",
      children: [startDate && (0, import_jsx_runtime.jsx)("div", {
        className: "n3__date-picker-field__label",
        children: displayFormat3(startDate, locale2)
      }), range && endDate && (0, import_jsx_runtime3.jsxs)(import_jsx_runtime2.Fragment, {
        children: [(0, import_jsx_runtime.jsx)("div", {
          className: "n3__date-picker-field__dash",
          children: "\u2013"
        }), (0, import_jsx_runtime.jsx)("div", {
          className: "n3__date-picker-field__label",
          children: displayFormat3(endDate, locale2)
        })]
      })]
    }), canClear && (0, import_jsx_runtime.jsx)("button", {
      type: "button",
      className: "n3__date-picker-field__clear-button",
      onClick: onClearHandler,
      "aria-label": "clear button"
    }), (0, import_jsx_runtime.jsx)("div", {
      className: "n3__date-picker-field__calendar"
    })]
  }));
}
FieldInner.defaultProps = {
  startDate: null,
  endDate: null
};
var field_default = (0, import_react18.memo)(FieldInner);

// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}

// node_modules/@n3/react-date-picker/es/menu.js
var import_react33 = __toESM(require_react());

// node_modules/react-portal/es/PortalCompat.js
var import_react_dom4 = __toESM(require_react_dom());

// node_modules/react-portal/es/Portal.js
var import_react19 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/react-portal/es/utils.js
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/react-portal/es/Portal.js
var _createClass2 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Portal = function(_React$Component) {
  _inherits2(Portal4, _React$Component);
  function Portal4() {
    _classCallCheck2(this, Portal4);
    return _possibleConstructorReturn(this, (Portal4.__proto__ || Object.getPrototypeOf(Portal4)).apply(this, arguments));
  }
  _createClass2(Portal4, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.defaultNode) {
        document.body.removeChild(this.defaultNode);
      }
      this.defaultNode = null;
    }
  }, {
    key: "render",
    value: function render() {
      if (!canUseDOM) {
        return null;
      }
      if (!this.props.node && !this.defaultNode) {
        this.defaultNode = document.createElement("div");
        document.body.appendChild(this.defaultNode);
      }
      return import_react_dom2.default.createPortal(this.props.children, this.props.node || this.defaultNode);
    }
  }]);
  return Portal4;
}(import_react19.default.Component);
Portal.propTypes = {
  children: import_prop_types4.default.node.isRequired,
  node: import_prop_types4.default.any
};
var Portal_default = Portal;

// node_modules/react-portal/es/LegacyPortal.js
var import_react20 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var import_prop_types5 = __toESM(require_prop_types());
var _createClass3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn2(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Portal2 = function(_React$Component) {
  _inherits3(Portal4, _React$Component);
  function Portal4() {
    _classCallCheck3(this, Portal4);
    return _possibleConstructorReturn2(this, (Portal4.__proto__ || Object.getPrototypeOf(Portal4)).apply(this, arguments));
  }
  _createClass3(Portal4, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.renderPortal();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(props) {
      this.renderPortal();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      import_react_dom3.default.unmountComponentAtNode(this.defaultNode || this.props.node);
      if (this.defaultNode) {
        document.body.removeChild(this.defaultNode);
      }
      this.defaultNode = null;
      this.portal = null;
    }
  }, {
    key: "renderPortal",
    value: function renderPortal(props) {
      if (!this.props.node && !this.defaultNode) {
        this.defaultNode = document.createElement("div");
        document.body.appendChild(this.defaultNode);
      }
      var children = this.props.children;
      if (typeof this.props.children.type === "function") {
        children = import_react20.default.cloneElement(this.props.children);
      }
      this.portal = import_react_dom3.default.unstable_renderSubtreeIntoContainer(this, children, this.props.node || this.defaultNode);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);
  return Portal4;
}(import_react20.default.Component);
var LegacyPortal_default = Portal2;
Portal2.propTypes = {
  children: import_prop_types5.default.node.isRequired,
  node: import_prop_types5.default.any
};

// node_modules/react-portal/es/PortalCompat.js
var Portal3 = void 0;
if (import_react_dom4.default.createPortal) {
  Portal3 = Portal_default;
} else {
  Portal3 = LegacyPortal_default;
}
var PortalCompat_default = Portal3;

// node_modules/react-portal/es/PortalWithState.js
var import_react21 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var _createClass4 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn3(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var KEYCODES = {
  ESCAPE: 27
};
var PortalWithState = function(_React$Component) {
  _inherits4(PortalWithState2, _React$Component);
  function PortalWithState2(props) {
    _classCallCheck4(this, PortalWithState2);
    var _this = _possibleConstructorReturn3(this, (PortalWithState2.__proto__ || Object.getPrototypeOf(PortalWithState2)).call(this, props));
    _this.portalNode = null;
    _this.state = { active: !!props.defaultOpen };
    _this.openPortal = _this.openPortal.bind(_this);
    _this.closePortal = _this.closePortal.bind(_this);
    _this.wrapWithPortal = _this.wrapWithPortal.bind(_this);
    _this.handleOutsideMouseClick = _this.handleOutsideMouseClick.bind(_this);
    _this.handleKeydown = _this.handleKeydown.bind(_this);
    return _this;
  }
  _createClass4(PortalWithState2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.closeOnEsc) {
        document.addEventListener("keydown", this.handleKeydown);
      }
      if (this.props.closeOnOutsideClick) {
        document.addEventListener("click", this.handleOutsideMouseClick);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.closeOnEsc) {
        document.removeEventListener("keydown", this.handleKeydown);
      }
      if (this.props.closeOnOutsideClick) {
        document.removeEventListener("click", this.handleOutsideMouseClick);
      }
    }
  }, {
    key: "openPortal",
    value: function openPortal(e) {
      if (this.state.active) {
        return;
      }
      if (e && e.nativeEvent) {
        e.nativeEvent.stopImmediatePropagation();
      }
      this.setState({ active: true }, this.props.onOpen);
    }
  }, {
    key: "closePortal",
    value: function closePortal() {
      if (!this.state.active) {
        return;
      }
      this.setState({ active: false }, this.props.onClose);
    }
  }, {
    key: "wrapWithPortal",
    value: function wrapWithPortal(children) {
      var _this2 = this;
      if (!this.state.active) {
        return null;
      }
      return import_react21.default.createElement(PortalCompat_default, {
        node: this.props.node,
        key: "react-portal",
        ref: function ref(portalNode) {
          return _this2.portalNode = portalNode;
        }
      }, children);
    }
  }, {
    key: "handleOutsideMouseClick",
    value: function handleOutsideMouseClick(e) {
      if (!this.state.active) {
        return;
      }
      var root = this.portalNode && (this.portalNode.props.node || this.portalNode.defaultNode);
      if (!root || root.contains(e.target) || e.button && e.button !== 0) {
        return;
      }
      this.closePortal();
    }
  }, {
    key: "handleKeydown",
    value: function handleKeydown(e) {
      if (e.keyCode === KEYCODES.ESCAPE && this.state.active) {
        this.closePortal();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children({
        openPortal: this.openPortal,
        closePortal: this.closePortal,
        portal: this.wrapWithPortal,
        isOpen: this.state.active
      });
    }
  }]);
  return PortalWithState2;
}(import_react21.default.Component);
PortalWithState.propTypes = {
  children: import_prop_types6.default.func.isRequired,
  defaultOpen: import_prop_types6.default.bool,
  node: import_prop_types6.default.any,
  closeOnEsc: import_prop_types6.default.bool,
  closeOnOutsideClick: import_prop_types6.default.bool,
  onOpen: import_prop_types6.default.func,
  onClose: import_prop_types6.default.func
};
PortalWithState.defaultProps = {
  onOpen: function onOpen() {
  },
  onClose: function onClose() {
  }
};

// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}

// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}

// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

// node_modules/@n3/react-date-picker/es/menuContent.js
var import_react32 = __toESM(require_react());
var import_classnames7 = __toESM(require_classnames());

// node_modules/@n3/react-date-picker/es/input.js
var import_react22 = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var _excluded = ["name", "hasFocus"];
var Input = function Input2(_ref) {
  var name = _ref.name, hasFocus = _ref.hasFocus, props = _objectWithoutProperties(_ref, _excluded);
  var inputRef = (0, import_react22.useRef)(null);
  var isFocusInput = typeof hasFocus === "function" ? hasFocus(name) : hasFocus;
  (0, import_react22.useEffect)(function() {
    var timeoutId = setTimeout(function() {
      var inputNode = inputRef.current;
      if (inputNode) {
        if (isFocusInput) {
          inputNode.focus();
        } else {
          inputNode.blur();
        }
      }
    }, 0);
    return function() {
      clearTimeout(timeoutId);
    };
  }, [isFocusInput]);
  return (0, import_jsx_runtime4.jsx)("input", _objectSpread2({
    ref: inputRef,
    name,
    type: "text",
    className: (0, import_classnames.default)("n3__date-picker__input", {
      "n3__date-picker__input_focus": isFocusInput
    })
  }, props));
};
Input.defaultProps = {
  autoComplete: "off"
};
var input_default = Input;

// node_modules/@n3/react-date-picker/es/calendar.js
var import_react31 = __toESM(require_react());
var import_classnames6 = __toESM(require_classnames());

// node_modules/date-fns/esm/locale/ru/_lib/formatDistance/index.js
function declension(scheme, count) {
  if (scheme.one !== void 0 && count === 1) {
    return scheme.one;
  }
  var rem10 = count % 10;
  var rem100 = count % 100;
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace("{{count}}", String(count));
  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace("{{count}}", String(count));
  } else {
    return scheme.pluralGenitive.replace("{{count}}", String(count));
  }
}
function buildLocalizeTokenFn(scheme) {
  return function(count, options) {
    if (options !== null && options !== void 0 && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        if (scheme.future) {
          return declension(scheme.future, count);
        } else {
          return "\u0447\u0435\u0440\u0435\u0437 " + declension(scheme.regular, count);
        }
      } else {
        if (scheme.past) {
          return declension(scheme.past, count);
        } else {
          return declension(scheme.regular, count) + " \u043D\u0430\u0437\u0430\u0434";
        }
      }
    } else {
      return declension(scheme.regular, count);
    }
  };
}
var formatDistanceLocale = {
  lessThanXSeconds: buildLocalizeTokenFn({
    regular: {
      one: "\u043C\u0435\u043D\u044C\u0448\u0435 \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
      singularNominative: "\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
      singularGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434",
      pluralGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434"
    },
    future: {
      one: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u043A\u0443\u043D\u0434\u0443",
      singularNominative: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443",
      singularGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
      pluralGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434"
    }
  }),
  xSeconds: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
      singularGenitive: "{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
      pluralGenitive: "{{count}} \u0441\u0435\u043A\u0443\u043D\u0434"
    },
    past: {
      singularNominative: "{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443 \u043D\u0430\u0437\u0430\u0434",
      singularGenitive: "{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B \u043D\u0430\u0437\u0430\u0434",
      pluralGenitive: "{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u043D\u0430\u0437\u0430\u0434"
    },
    future: {
      singularNominative: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443",
      singularGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
      pluralGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434"
    }
  }),
  halfAMinute: function halfAMinute(_count, options) {
    if (options !== null && options !== void 0 && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        return "\u0447\u0435\u0440\u0435\u0437 \u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B";
      } else {
        return "\u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B \u043D\u0430\u0437\u0430\u0434";
      }
    }
    return "\u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B";
  },
  lessThanXMinutes: buildLocalizeTokenFn({
    regular: {
      one: "\u043C\u0435\u043D\u044C\u0448\u0435 \u043C\u0438\u043D\u0443\u0442\u044B",
      singularNominative: "\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u043C\u0438\u043D\u0443\u0442\u044B",
      singularGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u043C\u0438\u043D\u0443\u0442",
      pluralGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u043C\u0438\u043D\u0443\u0442"
    },
    future: {
      one: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 \u043C\u0438\u043D\u0443\u0442\u0443",
      singularNominative: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u0443",
      singularGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u044B",
      pluralGenitive: "\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442"
    }
  }),
  xMinutes: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u043C\u0438\u043D\u0443\u0442\u0430",
      singularGenitive: "{{count}} \u043C\u0438\u043D\u0443\u0442\u044B",
      pluralGenitive: "{{count}} \u043C\u0438\u043D\u0443\u0442"
    },
    past: {
      singularNominative: "{{count}} \u043C\u0438\u043D\u0443\u0442\u0443 \u043D\u0430\u0437\u0430\u0434",
      singularGenitive: "{{count}} \u043C\u0438\u043D\u0443\u0442\u044B \u043D\u0430\u0437\u0430\u0434",
      pluralGenitive: "{{count}} \u043C\u0438\u043D\u0443\u0442 \u043D\u0430\u0437\u0430\u0434"
    },
    future: {
      singularNominative: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u0443",
      singularGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u044B",
      pluralGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442"
    }
  }),
  aboutXHours: buildLocalizeTokenFn({
    regular: {
      singularNominative: "\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u0430",
      singularGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u043E\u0432",
      pluralGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u043E\u0432"
    },
    future: {
      singularNominative: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441",
      singularGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\u0430",
      pluralGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\u043E\u0432"
    }
  }),
  xHours: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u0447\u0430\u0441",
      singularGenitive: "{{count}} \u0447\u0430\u0441\u0430",
      pluralGenitive: "{{count}} \u0447\u0430\u0441\u043E\u0432"
    }
  }),
  xDays: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u0434\u0435\u043D\u044C",
      singularGenitive: "{{count}} \u0434\u043D\u044F",
      pluralGenitive: "{{count}} \u0434\u043D\u0435\u0439"
    }
  }),
  aboutXWeeks: buildLocalizeTokenFn({
    regular: {
      singularNominative: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043D\u0435\u0434\u0435\u043B\u0438",
      singularGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043D\u0435\u0434\u0435\u043B\u044C",
      pluralGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043D\u0435\u0434\u0435\u043B\u044C"
    },
    future: {
      singularNominative: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043D\u0435\u0434\u0435\u043B\u044E",
      singularGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043D\u0435\u0434\u0435\u043B\u0438",
      pluralGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043D\u0435\u0434\u0435\u043B\u044C"
    }
  }),
  xWeeks: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u043D\u0435\u0434\u0435\u043B\u044F",
      singularGenitive: "{{count}} \u043D\u0435\u0434\u0435\u043B\u0438",
      pluralGenitive: "{{count}} \u043D\u0435\u0434\u0435\u043B\u044C"
    }
  }),
  aboutXMonths: buildLocalizeTokenFn({
    regular: {
      singularNominative: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u044F\u0446\u0430",
      singularGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432",
      pluralGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432"
    },
    future: {
      singularNominative: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446",
      singularGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u0430",
      pluralGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432"
    }
  }),
  xMonths: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u043C\u0435\u0441\u044F\u0446",
      singularGenitive: "{{count}} \u043C\u0435\u0441\u044F\u0446\u0430",
      pluralGenitive: "{{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432"
    }
  }),
  aboutXYears: buildLocalizeTokenFn({
    regular: {
      singularNominative: "\u043E\u043A\u043E\u043B\u043E {{count}} \u0433\u043E\u0434\u0430",
      singularGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043B\u0435\u0442",
      pluralGenitive: "\u043E\u043A\u043E\u043B\u043E {{count}} \u043B\u0435\u0442"
    },
    future: {
      singularNominative: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434",
      singularGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\u0430",
      pluralGenitive: "\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043B\u0435\u0442"
    }
  }),
  xYears: buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} \u0433\u043E\u0434",
      singularGenitive: "{{count}} \u0433\u043E\u0434\u0430",
      pluralGenitive: "{{count}} \u043B\u0435\u0442"
    }
  }),
  overXYears: buildLocalizeTokenFn({
    regular: {
      singularNominative: "\u0431\u043E\u043B\u044C\u0448\u0435 {{count}} \u0433\u043E\u0434\u0430",
      singularGenitive: "\u0431\u043E\u043B\u044C\u0448\u0435 {{count}} \u043B\u0435\u0442",
      pluralGenitive: "\u0431\u043E\u043B\u044C\u0448\u0435 {{count}} \u043B\u0435\u0442"
    },
    future: {
      singularNominative: "\u0431\u043E\u043B\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434",
      singularGenitive: "\u0431\u043E\u043B\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\u0430",
      pluralGenitive: "\u0431\u043E\u043B\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043B\u0435\u0442"
    }
  }),
  almostXYears: buildLocalizeTokenFn({
    regular: {
      singularNominative: "\u043F\u043E\u0447\u0442\u0438 {{count}} \u0433\u043E\u0434",
      singularGenitive: "\u043F\u043E\u0447\u0442\u0438 {{count}} \u0433\u043E\u0434\u0430",
      pluralGenitive: "\u043F\u043E\u0447\u0442\u0438 {{count}} \u043B\u0435\u0442"
    },
    future: {
      singularNominative: "\u043F\u043E\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434",
      singularGenitive: "\u043F\u043E\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\u0430",
      pluralGenitive: "\u043F\u043E\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u043B\u0435\u0442"
    }
  })
};
var formatDistance = function formatDistance2(token, count, options) {
  return formatDistanceLocale[token](count, options);
};
var formatDistance_default = formatDistance;

// node_modules/date-fns/esm/locale/ru/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, d MMMM y '\u0433.'",
  long: "d MMMM y '\u0433.'",
  medium: "d MMM y '\u0433.'",
  short: "dd.MM.y"
};
var timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm"
};
var dateTimeFormats = {
  any: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "any"
  })
};
var formatLong_default = formatLong;

// node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js
function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {
  requiredArgs(2, arguments);
  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);
  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);
  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
}

// node_modules/date-fns/esm/locale/ru/_lib/formatRelative/index.js
var accusativeWeekdays = ["\u0432\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435", "\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A", "\u0432\u0442\u043E\u0440\u043D\u0438\u043A", "\u0441\u0440\u0435\u0434\u0443", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043F\u044F\u0442\u043D\u0438\u0446\u0443", "\u0441\u0443\u0431\u0431\u043E\u0442\u0443"];
function _lastWeek(day) {
  var weekday = accusativeWeekdays[day];
  switch (day) {
    case 0:
      return "'\u0432 \u043F\u0440\u043E\u0448\u043B\u043E\u0435 " + weekday + " \u0432' p";
    case 1:
    case 2:
    case 4:
      return "'\u0432 \u043F\u0440\u043E\u0448\u043B\u044B\u0439 " + weekday + " \u0432' p";
    case 3:
    case 5:
    case 6:
      return "'\u0432 \u043F\u0440\u043E\u0448\u043B\u0443\u044E " + weekday + " \u0432' p";
  }
}
function thisWeek(day) {
  var weekday = accusativeWeekdays[day];
  if (day === 2) {
    return "'\u0432\u043E " + weekday + " \u0432' p";
  } else {
    return "'\u0432 " + weekday + " \u0432' p";
  }
}
function _nextWeek(day) {
  var weekday = accusativeWeekdays[day];
  switch (day) {
    case 0:
      return "'\u0432 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0435 " + weekday + " \u0432' p";
    case 1:
    case 2:
    case 4:
      return "'\u0432 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 " + weekday + " \u0432' p";
    case 3:
    case 5:
    case 6:
      return "'\u0432 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0443\u044E " + weekday + " \u0432' p";
  }
}
var formatRelativeLocale = {
  lastWeek: function lastWeek(date, baseDate, options) {
    var day = date.getUTCDay();
    if (isSameUTCWeek(date, baseDate, options)) {
      return thisWeek(day);
    } else {
      return _lastWeek(day);
    }
  },
  yesterday: "'\u0432\u0447\u0435\u0440\u0430 \u0432' p",
  today: "'\u0441\u0435\u0433\u043E\u0434\u043D\u044F \u0432' p",
  tomorrow: "'\u0437\u0430\u0432\u0442\u0440\u0430 \u0432' p",
  nextWeek: function nextWeek(date, baseDate, options) {
    var day = date.getUTCDay();
    if (isSameUTCWeek(date, baseDate, options)) {
      return thisWeek(day);
    } else {
      return _nextWeek(day);
    }
  },
  other: "P"
};
var formatRelative = function formatRelative2(token, date, baseDate, options) {
  var format2 = formatRelativeLocale[token];
  if (typeof format2 === "function") {
    return format2(date, baseDate, options);
  }
  return format2;
};
var formatRelative_default = formatRelative;

// node_modules/date-fns/esm/locale/ru/_lib/localize/index.js
var eraValues = {
  narrow: ["\u0434\u043E \u043D.\u044D.", "\u043D.\u044D."],
  abbreviated: ["\u0434\u043E \u043D. \u044D.", "\u043D. \u044D."],
  wide: ["\u0434\u043E \u043D\u0430\u0448\u0435\u0439 \u044D\u0440\u044B", "\u043D\u0430\u0448\u0435\u0439 \u044D\u0440\u044B"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-\u0439 \u043A\u0432.", "2-\u0439 \u043A\u0432.", "3-\u0439 \u043A\u0432.", "4-\u0439 \u043A\u0432."],
  wide: ["1-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B", "2-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B", "3-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B", "4-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B"]
};
var monthValues = {
  narrow: ["\u042F", "\u0424", "\u041C", "\u0410", "\u041C", "\u0418", "\u0418", "\u0410", "\u0421", "\u041E", "\u041D", "\u0414"],
  abbreviated: ["\u044F\u043D\u0432.", "\u0444\u0435\u0432.", "\u043C\u0430\u0440\u0442", "\u0430\u043F\u0440.", "\u043C\u0430\u0439", "\u0438\u044E\u043D\u044C", "\u0438\u044E\u043B\u044C", "\u0430\u0432\u0433.", "\u0441\u0435\u043D\u0442.", "\u043E\u043A\u0442.", "\u043D\u043E\u044F\u0431.", "\u0434\u0435\u043A."],
  wide: ["\u044F\u043D\u0432\u0430\u0440\u044C", "\u0444\u0435\u0432\u0440\u0430\u043B\u044C", "\u043C\u0430\u0440\u0442", "\u0430\u043F\u0440\u0435\u043B\u044C", "\u043C\u0430\u0439", "\u0438\u044E\u043D\u044C", "\u0438\u044E\u043B\u044C", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043D\u0442\u044F\u0431\u0440\u044C", "\u043E\u043A\u0442\u044F\u0431\u0440\u044C", "\u043D\u043E\u044F\u0431\u0440\u044C", "\u0434\u0435\u043A\u0430\u0431\u0440\u044C"]
};
var formattingMonthValues = {
  narrow: ["\u042F", "\u0424", "\u041C", "\u0410", "\u041C", "\u0418", "\u0418", "\u0410", "\u0421", "\u041E", "\u041D", "\u0414"],
  abbreviated: ["\u044F\u043D\u0432.", "\u0444\u0435\u0432.", "\u043C\u0430\u0440.", "\u0430\u043F\u0440.", "\u043C\u0430\u044F", "\u0438\u044E\u043D.", "\u0438\u044E\u043B.", "\u0430\u0432\u0433.", "\u0441\u0435\u043D\u0442.", "\u043E\u043A\u0442.", "\u043D\u043E\u044F\u0431.", "\u0434\u0435\u043A."],
  wide: ["\u044F\u043D\u0432\u0430\u0440\u044F", "\u0444\u0435\u0432\u0440\u0430\u043B\u044F", "\u043C\u0430\u0440\u0442\u0430", "\u0430\u043F\u0440\u0435\u043B\u044F", "\u043C\u0430\u044F", "\u0438\u044E\u043D\u044F", "\u0438\u044E\u043B\u044F", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043D\u0442\u044F\u0431\u0440\u044F", "\u043E\u043A\u0442\u044F\u0431\u0440\u044F", "\u043D\u043E\u044F\u0431\u0440\u044F", "\u0434\u0435\u043A\u0430\u0431\u0440\u044F"]
};
var dayValues = {
  narrow: ["\u0412", "\u041F", "\u0412", "\u0421", "\u0427", "\u041F", "\u0421"],
  short: ["\u0432\u0441", "\u043F\u043D", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043F\u0442", "\u0441\u0431"],
  abbreviated: ["\u0432\u0441\u043A", "\u043F\u043D\u0434", "\u0432\u0442\u0440", "\u0441\u0440\u0434", "\u0447\u0442\u0432", "\u043F\u0442\u043D", "\u0441\u0443\u0431"],
  wide: ["\u0432\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435", "\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A", "\u0432\u0442\u043E\u0440\u043D\u0438\u043A", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043F\u044F\u0442\u043D\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043E\u0442\u0430"]
};
var dayPeriodValues = {
  narrow: {
    am: "\u0414\u041F",
    pm: "\u041F\u041F",
    midnight: "\u043F\u043E\u043B\u043D.",
    noon: "\u043F\u043E\u043B\u0434.",
    morning: "\u0443\u0442\u0440\u043E",
    afternoon: "\u0434\u0435\u043D\u044C",
    evening: "\u0432\u0435\u0447.",
    night: "\u043D\u043E\u0447\u044C"
  },
  abbreviated: {
    am: "\u0414\u041F",
    pm: "\u041F\u041F",
    midnight: "\u043F\u043E\u043B\u043D.",
    noon: "\u043F\u043E\u043B\u0434.",
    morning: "\u0443\u0442\u0440\u043E",
    afternoon: "\u0434\u0435\u043D\u044C",
    evening: "\u0432\u0435\u0447.",
    night: "\u043D\u043E\u0447\u044C"
  },
  wide: {
    am: "\u0414\u041F",
    pm: "\u041F\u041F",
    midnight: "\u043F\u043E\u043B\u043D\u043E\u0447\u044C",
    noon: "\u043F\u043E\u043B\u0434\u0435\u043D\u044C",
    morning: "\u0443\u0442\u0440\u043E",
    afternoon: "\u0434\u0435\u043D\u044C",
    evening: "\u0432\u0435\u0447\u0435\u0440",
    night: "\u043D\u043E\u0447\u044C"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "\u0414\u041F",
    pm: "\u041F\u041F",
    midnight: "\u043F\u043E\u043B\u043D.",
    noon: "\u043F\u043E\u043B\u0434.",
    morning: "\u0443\u0442\u0440\u0430",
    afternoon: "\u0434\u043D\u044F",
    evening: "\u0432\u0435\u0447.",
    night: "\u043D\u043E\u0447\u0438"
  },
  abbreviated: {
    am: "\u0414\u041F",
    pm: "\u041F\u041F",
    midnight: "\u043F\u043E\u043B\u043D.",
    noon: "\u043F\u043E\u043B\u0434.",
    morning: "\u0443\u0442\u0440\u0430",
    afternoon: "\u0434\u043D\u044F",
    evening: "\u0432\u0435\u0447.",
    night: "\u043D\u043E\u0447\u0438"
  },
  wide: {
    am: "\u0414\u041F",
    pm: "\u041F\u041F",
    midnight: "\u043F\u043E\u043B\u043D\u043E\u0447\u044C",
    noon: "\u043F\u043E\u043B\u0434\u0435\u043D\u044C",
    morning: "\u0443\u0442\u0440\u0430",
    afternoon: "\u0434\u043D\u044F",
    evening: "\u0432\u0435\u0447\u0435\u0440\u0430",
    night: "\u043D\u043E\u0447\u0438"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, options) {
  var number = Number(dirtyNumber);
  var unit = options === null || options === void 0 ? void 0 : options.unit;
  var suffix;
  if (unit === "date") {
    suffix = "-\u0435";
  } else if (unit === "week" || unit === "minute" || unit === "second") {
    suffix = "-\u044F";
  } else {
    suffix = "-\u0439";
  }
  return number + suffix;
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide",
    formattingValues: formattingMonthValues,
    defaultFormattingWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "any",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
var localize_default = localize;

// node_modules/date-fns/esm/locale/ru/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^((до )?н\.?\s?э\.?)/i,
  abbreviated: /^((до )?н\.?\s?э\.?)/i,
  wide: /^(до нашей эры|нашей эры|наша эра)/i
};
var parseEraPatterns = {
  any: [/^д/i, /^н/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,
  wide: /^[1234](-?[ыои]?й?)? квартал/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[яфмаисонд]/i,
  abbreviated: /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\.?/i,
  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i
};
var parseMonthPatterns = {
  narrow: [/^я/i, /^ф/i, /^м/i, /^а/i, /^м/i, /^и/i, /^и/i, /^а/i, /^с/i, /^о/i, /^н/i, /^я/i],
  any: [/^я/i, /^ф/i, /^мар/i, /^ап/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^ав/i, /^с/i, /^о/i, /^н/i, /^д/i]
};
var matchDayPatterns = {
  narrow: /^[впсч]/i,
  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\.?/i,
  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,
  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i
};
var parseDayPatterns = {
  narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i]
};
var matchDayPeriodPatterns = {
  narrow: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i,
  abbreviated: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i,
  wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^дп/i,
    pm: /^пп/i,
    midnight: /^полн/i,
    noon: /^полд/i,
    morning: /^у/i,
    afternoon: /^д[ен]/i,
    evening: /^в/i,
    night: /^н/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var match_default = match;

// node_modules/date-fns/esm/locale/ru/index.js
var locale = {
  code: "ru",
  formatDistance: formatDistance_default,
  formatLong: formatLong_default,
  formatRelative: formatRelative_default,
  localize: localize_default,
  match: match_default,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 1
  }
};
var ru_default = locale;

// node_modules/@n3/react-date-picker/es/locales/ru.js
var ruLocale = {
  formats: ["d.M", "d MMM", "d MMMM", "d.M.yy", "d MMM yy", "d MMMM yy", "d.M.yyyy", "d MMM yyyy", "d MMMM yyyy", "yyyy-M-d"],
  weekdays: {
    0: "\u0432\u0441",
    1: "\u043F\u043D",
    2: "\u0432\u0442",
    3: "\u0441\u0440",
    4: "\u0447\u0442",
    5: "\u043F\u0442",
    6: "\u0441\u0431"
  },
  monthsShort: ["\u042F\u043D\u0432", "\u0424\u0435\u0432\u0440", "\u041C\u0430\u0440\u0442", "\u0410\u043F\u0440", "\u041C\u0430\u0439", "\u0418\u044E\u043D\u044C", "\u0418\u044E\u043B\u044C", "\u0410\u0432\u0433", "\u0421\u0435\u043D\u0442", "\u041E\u043A\u0442", "\u041D\u043E\u044F\u0431", "\u0414\u0435\u043A"],
  months: ["\u042F\u043D\u0432\u0430\u0440\u044C", "\u0424\u0435\u0432\u0440\u0430\u043B\u044C", "\u041C\u0430\u0440\u0442", "\u0410\u043F\u0440\u0435\u043B\u044C", "\u041C\u0430\u0439", "\u0418\u044E\u043D\u044C", "\u0418\u044E\u043B\u044C", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043D\u0442\u044F\u0431\u0440\u044C", "\u041E\u043A\u0442\u044F\u0431\u0440\u044C", "\u041D\u043E\u044F\u0431\u0440\u044C", "\u0414\u0435\u043A\u0430\u0431\u0440\u044C"],
  weekdaysOrdering: [1, 2, 3, 4, 5, 6, 0],
  displayFormat: "dd.MM.yyyy",
  dateFnsLocale: ru_default
};
var ru_default2 = ruLocale;

// node_modules/@n3/react-date-picker/es/locales/en.js
var enLocale = {
  formats: ["d/M", "d-M", "d MMM", "d MMMM", "d/M/yy", "d-M-yy", "d MMM yy", "d MMMM yy", "d/M/yyyy", "d-M-yyyy", "d MMM yyyy", "d MMMM yyyy", "yyyy-M-d"],
  weekdays: {
    0: "Su",
    1: "Mo",
    2: "Tu",
    3: "We",
    4: "Th",
    5: "Fr",
    6: "Sa"
  },
  weekdaysOrdering: [0, 1, 2, 3, 4, 5, 6],
  monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  displayFormat: "dd/MM/yyyy",
  dateFnsLocale: en_US_default
};
var en_default = enLocale;

// node_modules/@n3/react-date-picker/es/locales/index.js
var locales = {
  ru: ru_default2,
  en: en_default
};
var hasSupportLocal = function hasSupportLocal2(locale2) {
  return !!locales[locale2];
};
var defaultLocal = "ru";
var locales_default = locales;

// node_modules/@n3/react-date-picker/es/days.js
var import_react26 = __toESM(require_react());

// node_modules/date-fns/esm/differenceInCalendarWeeks/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, options) {
  requiredArgs(2, arguments);
  var startOfWeekLeft = startOfWeek(dirtyDateLeft, options);
  var startOfWeekRight = startOfWeek(dirtyDateRight, options);
  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);
  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}

// node_modules/date-fns/esm/lastDayOfMonth/index.js
function lastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/getWeeksInMonth/index.js
function getWeeksInMonth(date, options) {
  requiredArgs(1, arguments);
  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;
}

// node_modules/@n3/react-date-picker/es/utils/getMonthHeight.js
var cellSize = 26;
var monthHeaderSize = 26;
var monthMarginTop = 10;
var getMonthHeight = function getMonthHeight2(date) {
  var weeksInMonth = getWeeksInMonth(date, {
    locale: ru_default
  });
  return weeksInMonth * cellSize + monthHeaderSize + monthMarginTop;
};
var getMonthHeight_default = getMonthHeight;

// node_modules/@n3/react-date-picker/es/utils/dateToPx.js
var dateToPx = function dateToPx2(x0, date0, a, y) {
  return +x0 + (y.getTime() - date0.getTime()) / a;
};
var dateToPx_default = dateToPx;

// node_modules/@n3/react-date-picker/es/utils/getScrollSpeed.js
var getScrollSpeed = function getScrollSpeed2(date) {
  var monthStart = startOfMonth(date);
  var monthEnd = endOfMonth(date);
  return (monthEnd.getTime() - monthStart.getTime()) / getMonthHeight_default(monthStart);
};
var getScrollSpeed_default = getScrollSpeed;

// node_modules/@n3/react-date-picker/es/utils/getOffset.js
var getOffset = function getOffset2(date) {
  var monthStart = startOfMonth(date);
  var speed = getScrollSpeed_default(date);
  return dateToPx_default(0, date, speed, monthStart);
};
var getOffset_default = getOffset;

// node_modules/@n3/react-date-picker/es/utils/pxToDate.js
var pxToDate = function pxToDate2(x0, date0, a, x) {
  return +date0 + (x - x0) * a;
};
var pxToDate_default = pxToDate;

// node_modules/@n3/react-date-picker/es/defaults/getDate.js
var getDate = function getDate2(selected, deltaY) {
  var speed = getScrollSpeed_default(selected);
  var offset = getOffset_default(selected);
  var bottomOffset = getMonthHeight_default(selected) + offset;
  var date;
  if (deltaY < offset) {
    var month = subMonths(selected, 1);
    date = pxToDate_default(0, selected, speed, offset) + (deltaY - offset) * getScrollSpeed_default(month);
  } else if (deltaY > bottomOffset) {
    var _month = addMonths(selected, 1);
    date = pxToDate_default(0, selected, speed, bottomOffset) + (deltaY - bottomOffset) * getScrollSpeed_default(_month);
  } else {
    date = pxToDate_default(0, selected, speed, deltaY);
  }
  return new Date(date);
};
var getDate_default = getDate;

// node_modules/@n3/react-date-picker/es/scrollArea.js
var import_react23 = __toESM(require_react());

// node_modules/@n3/react-date-picker/es/utils/getScrollLineHeight.js
var getScrollLineHeight = function getScrollLineHeight2() {
  var iframe = document.createElement("iframe");
  document.body.appendChild(iframe);
  var iwin = iframe.contentWindow;
  if (!iwin) {
    return null;
  }
  var idoc = iwin.document;
  idoc.open();
  idoc.write("<!DOCTYPE html><html><head></head><body><span>a</span></body></html>");
  idoc.close();
  var span = idoc.body.firstElementChild;
  if (!span) {
    return null;
  }
  var r = span.offsetHeight;
  document.body.removeChild(iframe);
  return r;
};
var getScrollLineHeight_default = getScrollLineHeight;

// node_modules/@n3/react-date-picker/es/utils/scheduleRaf.js
function scheduleRaf(callback) {
  var requestId;
  return function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (!requestId) {
      requestId = requestAnimationFrame(function() {
        callback.apply(void 0, args);
        requestId = null;
      });
    }
  };
}

// node_modules/@n3/react-date-picker/es/scrollArea.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var ScrollArea = function(_PureComponent) {
  _inherits(ScrollArea2, _PureComponent);
  var _super = _createSuper(ScrollArea2);
  function ScrollArea2() {
    var _this;
    _classCallCheck(this, ScrollArea2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "deltaY", 0);
    _defineProperty(_assertThisInitialized(_this), "clientY", 0);
    _defineProperty(_assertThisInitialized(_this), "scrollLineHeight", getScrollLineHeight_default());
    _defineProperty(_assertThisInitialized(_this), "onWheel", function(_ref) {
      var deltaY = _ref.deltaY, deltaMode = _ref.deltaMode;
      if (_this.scrollLineHeight === null) {
        return;
      }
      var deltaYValue = deltaMode === WheelEvent.DOM_DELTA_LINE ? deltaY * _this.scrollLineHeight : deltaY;
      _this.deltaY += deltaYValue;
      _this.handleScroll();
    });
    _defineProperty(_assertThisInitialized(_this), "onTouchStart", function(_ref2) {
      var targetTouches = _ref2.targetTouches;
      _this.clientY = targetTouches[0].clientY;
    });
    _defineProperty(_assertThisInitialized(_this), "onTouchMove", function(_ref3) {
      var targetTouches = _ref3.targetTouches;
      var clientY = targetTouches[0].clientY;
      _this.deltaY -= clientY - _this.clientY;
      _this.clientY = clientY;
      _this.handleScroll();
    });
    _defineProperty(_assertThisInitialized(_this), "onTouchEnd", function() {
      _this.clientY = 0;
    });
    _defineProperty(_assertThisInitialized(_this), "handleScroll", scheduleRaf(function() {
      var onChange = _this.props.onChange;
      onChange(_this.deltaY);
      _this.deltaY = 0;
    }));
    return _this;
  }
  _createClass(ScrollArea2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, style = _this$props.style, className = _this$props.className, children = _this$props.children;
      return (0, import_jsx_runtime5.jsx)("div", {
        style,
        className,
        onWheel: this.onWheel,
        onTouchStart: this.onTouchStart,
        onTouchMove: this.onTouchMove,
        onTouchEnd: this.onTouchEnd,
        children
      });
    }
  }]);
  return ScrollArea2;
}(import_react23.PureComponent);
_defineProperty(ScrollArea, "defaultProps", {
  style: {},
  className: null
});
var scrollArea_default = ScrollArea;

// node_modules/@n3/react-date-picker/es/day.js
var import_react25 = __toESM(require_react());

// node_modules/date-fns/esm/getISODay/index.js
function getISODay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var day = date.getDay();
  if (day === 0) {
    day = 7;
  }
  return day;
}

// node_modules/@n3/react-date-picker/es/day.js
var import_classnames3 = __toESM(require_classnames());

// node_modules/@n3/react-date-picker/es/button.js
var import_react24 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var Button = function(_PureComponent) {
  _inherits(Button2, _PureComponent);
  var _super = _createSuper(Button2);
  function Button2() {
    var _this;
    _classCallCheck(this, Button2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "onClick", function() {
      var _this$props = _this.props, value = _this$props.value, onChange = _this$props.onChange;
      onChange(value || null);
    });
    return _this;
  }
  _createClass(Button2, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props, className = _this$props2.className, disabled = _this$props2.disabled, children = _this$props2.children;
      return (0, import_jsx_runtime6.jsx)("button", {
        type: "button",
        className: (0, import_classnames2.default)("n3__date-picker__button", {
          "n3__date-picker__button_disabled": disabled
        }, className),
        onClick: this.onClick,
        disabled,
        children
      });
    }
  }]);
  return Button2;
}(import_react24.PureComponent);
_defineProperty(Button, "defaultProps", {
  disabled: false,
  className: null,
  value: null
});
var button_default = Button;

// node_modules/@n3/react-date-picker/es/day.js
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
function DayComponent(_ref) {
  var value = _ref.value, isSelected = _ref.isSelected, isBordered = _ref.isBordered, isDisabled = _ref.isDisabled, onChange = _ref.onChange;
  if (!value) {
    return (0, import_jsx_runtime7.jsx)("div", {
      className: "n3__date-picker__placeholder"
    });
  }
  return (0, import_jsx_runtime7.jsx)(button_default, {
    className: (0, import_classnames3.default)("n3__date-picker__day", {
      "n3__date-picker__day_current": isSameDay(new Date(), value),
      "n3__date-picker__day_selected": isSelected,
      "n3__date-picker__day_hovered": !(isSelected || isBordered || isDisabled),
      "n3__date-picker__day_bordered": isBordered,
      "n3__date-picker__day_weekend": getISODay(value) > 5
    }),
    onChange,
    disabled: isDisabled,
    value,
    children: (0, import_jsx_runtime7.jsx)("span", {
      className: "n3__date-picker-day-label",
      children: value.getDate()
    })
  });
}
DayComponent.defaultProps = {
  value: null
};
var day_default = (0, import_react25.memo)(DayComponent);

// node_modules/@n3/react-date-picker/es/utils/createMonthDays.js
var createMonthDays = function createMonthDays2(startDate) {
  var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var locale2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "ru";
  if (!startDate) {
    return [];
  }
  var date = startOfMonth(startDate);
  var _locales$locale = locales_default[locale2], weekdaysOrdering = _locales$locale.weekdaysOrdering, months = _locales$locale.months;
  return Array.from({
    length
  }).map(function(_, i) {
    var days = [];
    var startDateOfMonth = startOfMonth(addMonths(date, i));
    var endDateOfMonth = endOfMonth(addMonths(date, i));
    var monthStr = months[startDateOfMonth.getMonth()];
    var _loop = function _loop2() {
      var week = Array.from({
        length: 7
      });
      weekdaysOrdering.forEach(function(item, j) {
        if (!isSameMonth(endDateOfMonth, startDateOfMonth)) {
          return;
        }
        if (startDateOfMonth.getDay() === item) {
          week[j] = startDateOfMonth;
          startDateOfMonth = addDays(startDateOfMonth, 1);
        } else {
          week[j] = null;
        }
      });
      days.push(week);
    };
    while (isSameMonth(endDateOfMonth, startDateOfMonth)) {
      _loop();
    }
    return {
      monthStr,
      days
    };
  });
};
var createMonthDays_default = createMonthDays;

// node_modules/@n3/react-date-picker/es/days.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var getDaysRefOffset = function getDaysRefOffset2(calendarHeight, selected) {
  return calendarHeight / 2 - getMonthHeight_default(subMonths(selected, 1)) - getMonthHeight_default(subMonths(selected, 2)) + getOffset_default(selected);
};
var Days = function(_Component) {
  _inherits(Days2, _Component);
  var _super = _createSuper(Days2);
  function Days2() {
    var _this;
    _classCallCheck(this, Days2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "handleChange", function(deltaY) {
      var _this$props = _this.props, selected = _this$props.selected, onScroll = _this$props.onScroll, getDate3 = _this$props.getDate;
      if (getDate3 && selected) {
        var date = getDate3(selected, deltaY);
        onScroll(date);
      }
    });
    return _this;
  }
  _createClass(Days2, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props, selected = _this$props2.selected, isSelected = _this$props2.isSelected, isBordered = _this$props2.isBordered, isDisabled = _this$props2.isDisabled, onDayChange = _this$props2.onDayChange, calendarHeight = _this$props2.calendarHeight, locale2 = _this$props2.locale;
      var months = selected ? createMonthDays_default(subMonths(selected, 2), 5, locale2) : [];
      return (0, import_jsx_runtime8.jsx)("div", {
        className: "n3__date-picker__days-wrapper",
        children: (0, import_jsx_runtime8.jsx)(scrollArea_default, {
          className: "n3__date-picker__days",
          style: {
            marginTop: selected ? getDaysRefOffset(calendarHeight, selected) : void 0
          },
          onChange: this.handleChange,
          children: months.map(function(_ref, i) {
            var monthStr = _ref.monthStr, days = _ref.days;
            return (0, import_jsx_runtime9.jsxs)("div", {
              className: "n3__date-picker__days-month",
              children: [(0, import_jsx_runtime8.jsx)("div", {
                className: "n3__date-picker__days-month-title",
                children: monthStr
              }), days.map(function(week, j) {
                return (0, import_jsx_runtime8.jsx)("div", {
                  className: "n3__date-picker__days-week",
                  children: week.map(function(value, k) {
                    return (0, import_jsx_runtime8.jsx)(day_default, {
                      value,
                      isSelected: isSelected(value),
                      isBordered: isBordered(value),
                      isDisabled: value ? isDisabled(value, isSameDay) : true,
                      onChange: onDayChange
                    }, k);
                  })
                }, j);
              })]
            }, i);
          })
        })
      });
    }
  }]);
  return Days2;
}(import_react26.Component);
_defineProperty(Days, "defaultProps", {
  getDate: getDate_default
});
var days_default = Days;

// node_modules/@n3/react-date-picker/es/months.js
var import_react28 = __toESM(require_react());

// node_modules/date-fns/esm/getDayOfYear/index.js
function getDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = differenceInCalendarDays(date, startOfYear(date));
  var dayOfYear = diff + 1;
  return dayOfYear;
}

// node_modules/date-fns/esm/setDate/index.js
function setDate(dirtyDate, dirtyDayOfMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dayOfMonth = toInteger(dirtyDayOfMonth);
  date.setDate(dayOfMonth);
  return date;
}

// node_modules/@n3/react-date-picker/es/month.js
var import_react27 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var defaultRenderLabel = function defaultRenderLabel2(date, locale2) {
  return locales_default[locale2].monthsShort[date.getMonth()];
};
function MonthComponent(_ref) {
  var locale2 = _ref.locale, renderLabel = _ref.renderLabel, isCurrent = _ref.isCurrent, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, value = _ref.value, onChange = _ref.onChange;
  return (0, import_jsx_runtime10.jsx)(button_default, {
    className: (0, import_classnames4.default)("n3__date-picker__month", {
      "n3__date-picker__month_current": isCurrent,
      "n3__date-picker__month_selected": isSelected,
      "n3__date-picker__month_disabled": isDisabled
    }),
    disabled: isDisabled,
    value,
    onChange,
    children: renderLabel && renderLabel(value, locale2)
  });
}
MonthComponent.defaultProps = {
  renderLabel: defaultRenderLabel
};
var month_default = (0, import_react27.memo)(MonthComponent);

// node_modules/@n3/react-date-picker/es/utils/getMonthsOfYear.js
var getMonthsOfYear = function getMonthsOfYear2(date) {
  var startOfYearDate = startOfYear(date);
  return Array.from({
    length: 12
  }).map(function(_, i) {
    return setDate(addMonths(startOfYearDate, i), 15);
  });
};
var getMonthsOfYear_default = getMonthsOfYear;

// node_modules/@n3/react-date-picker/es/months.js
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var Months = function(_PureComponent) {
  _inherits(Months2, _PureComponent);
  var _super = _createSuper(Months2);
  function Months2() {
    var _this;
    _classCallCheck(this, Months2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "handleChange", function(deltaY) {
      var _this$props = _this.props, selected = _this$props.selected, onScroll = _this$props.onScroll;
      if (!selected) {
        return;
      }
      var nextSelected = deltaY > 0 ? subMonths(selected, 1) : addMonths(selected, 1);
      onScroll(nextSelected);
    });
    _defineProperty(_assertThisInitialized(_this), "isSelected", function(date) {
      var selected = _this.props.selected;
      if (!selected) {
        return false;
      }
      return isSameMonth(selected, date);
    });
    _defineProperty(_assertThisInitialized(_this), "getSelection", function(selected) {
      var _this$props2 = _this.props, calendarHeight = _this$props2.calendarHeight, offset = _this$props2.offset, space = _this$props2.space;
      if (!selected) {
        return [{}, {}];
      }
      var height = calendarHeight - 2 * space;
      var position = height * getDayOfYear(setDate(selected, 15)) / getDayOfYear(endOfYear(selected));
      var diff = space + position + offset - calendarHeight;
      return [{
        top: space,
        height: diff > 0 ? diff : 0
      }, {
        top: space + position - offset,
        height: Math.min(2 * offset, calendarHeight - (space + position - offset))
      }];
    });
    return _this;
  }
  _createClass(Months2, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props3 = this.props, selected = _this$props3.selected, isDisabled = _this$props3.isDisabled, onChange = _this$props3.onChange, locale2 = _this$props3.locale;
      var months = selected ? getMonthsOfYear_default(selected) : [];
      var _this$getSelection = this.getSelection(selected), _this$getSelection2 = _slicedToArray(_this$getSelection, 2), selectionTopStyles = _this$getSelection2[0], selectionBottomStyles = _this$getSelection2[1];
      return (0, import_jsx_runtime12.jsxs)(scrollArea_default, {
        className: "n3__date-picker__months",
        onChange: this.handleChange,
        children: [(0, import_jsx_runtime11.jsx)("div", {
          className: "n3__date-picker__selection",
          style: selectionTopStyles
        }), months.map(function(value, i) {
          return (0, import_jsx_runtime11.jsx)(month_default, {
            value,
            onChange,
            isCurrent: isSameMonth(value, new Date()),
            isDisabled: isDisabled(value, isSameMonth),
            isSelected: _this2.isSelected(value),
            locale: locale2
          }, i);
        }), (0, import_jsx_runtime11.jsx)("div", {
          className: "n3__date-picker__selection",
          style: selectionBottomStyles
        })]
      });
    }
  }]);
  return Months2;
}(import_react28.PureComponent);
var months_default = Months;

// node_modules/@n3/react-date-picker/es/years.js
var import_react30 = __toESM(require_react());

// node_modules/@n3/react-date-picker/es/defaults/renderYearLabel.js
var renderYearLabel = function renderYearLabel2(value) {
  return format(value, "yyyy");
};
var renderYearLabel_default = renderYearLabel;

// node_modules/@n3/react-date-picker/es/year.js
var import_react29 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
function Year(_ref) {
  var value = _ref.value, isCurrent = _ref.isCurrent, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, onChange = _ref.onChange, children = _ref.children;
  return (0, import_jsx_runtime13.jsx)(button_default, {
    value,
    className: (0, import_classnames5.default)("n3__date-picker__year", {
      "n3__date-picker__year_current": isCurrent,
      "n3__date-picker__year_selected": isSelected,
      "n3__date-picker__year_disabled": isDisabled
    }),
    disabled: isDisabled,
    onChange,
    children
  });
}
Year.defaultProps = {
  children: void 0
};
var year_default = (0, import_react29.memo)(Year);

// node_modules/@n3/react-date-picker/es/utils/getDateInterval.js
var getDateInterval = function getDateInterval2(start, length) {
  return Array.from({
    length
  }, function(_, i) {
    return addYears(start, i);
  });
};
var getDateInterval_default = getDateInterval;

// node_modules/@n3/react-date-picker/es/years.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var Years = function(_PureComponent) {
  _inherits(Years2, _PureComponent);
  var _super = _createSuper(Years2);
  function Years2() {
    var _this;
    _classCallCheck(this, Years2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "handleChange", function(deltaY) {
      var _this$props = _this.props, selected = _this$props.selected, onScroll = _this$props.onScroll;
      if (!selected) {
        return;
      }
      var nextSelected = deltaY > 0 ? subYears(selected, 1) : addYears(selected, 1);
      onScroll(nextSelected);
    });
    return _this;
  }
  _createClass(Years2, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props, selected = _this$props2.selected, isDisabled = _this$props2.isDisabled, onScroll = _this$props2.onScroll, renderLabel = _this$props2.renderLabel, locale2 = _this$props2.locale;
      var years = selected ? getDateInterval_default(addYears(selected, -5), 12) : [];
      return (0, import_jsx_runtime14.jsx)(scrollArea_default, {
        className: "n3__date-picker__years",
        onChange: this.handleChange,
        children: years.map(function(value, i) {
          return (0, import_jsx_runtime14.jsx)(year_default, {
            value,
            isCurrent: isSameYear(value, new Date()),
            isDisabled: isDisabled(value, isSameYear),
            isSelected: selected ? isSameYear(selected, value) : false,
            onChange: onScroll,
            children: renderLabel && renderLabel(value, locale2)
          }, i);
        })
      });
    }
  }]);
  return Years2;
}(import_react30.PureComponent);
_defineProperty(Years, "defaultProps", {
  renderLabel: renderYearLabel_default
});
var years_default = Years;

// node_modules/@n3/react-date-picker/es/utils/getCssValue.js
var getCssValue = function getCssValue2(name) {
  var style = getComputedStyle(document.documentElement);
  return parseInt(style.getPropertyValue(name), 10) || 0;
};
var getCssValue_default = getCssValue;

// node_modules/@n3/react-date-picker/es/calendar.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var isWeekend = function isWeekend2(weekdayIndex) {
  return [0, 6].includes(weekdayIndex);
};
var preventDefault = function preventDefault2(event) {
  event.preventDefault();
};
var Calendar = function(_Component) {
  _inherits(Calendar2, _Component);
  var _super = _createSuper(Calendar2);
  function Calendar2(props) {
    var _this;
    _classCallCheck(this, Calendar2);
    _this = _super.call(this, props);
    _defineProperty(_assertThisInitialized(_this), "calendarHeight", void 0);
    _defineProperty(_assertThisInitialized(_this), "monthsSelectionOffset", void 0);
    _defineProperty(_assertThisInitialized(_this), "monthsSelectionSpace", void 0);
    _defineProperty(_assertThisInitialized(_this), "datesRef", (0, import_react31.createRef)());
    _this.calendarHeight = getCssValue_default("--calendar-height");
    _this.monthsSelectionOffset = getCssValue_default("--months-selection-height") / 2;
    _this.monthsSelectionSpace = getCssValue_default("--months-space");
    return _this;
  }
  _createClass(Calendar2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var datesRef = this.datesRef.current;
      if (datesRef) {
        datesRef.addEventListener("wheel", preventDefault);
        datesRef.addEventListener("touchmove", preventDefault);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var datesRef = this.datesRef.current;
      if (datesRef) {
        datesRef.removeEventListener("wheel", preventDefault);
        datesRef.removeEventListener("touchmove", preventDefault);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, locale2 = _this$props.locale, selected = _this$props.selected, onChange = _this$props.onChange, onDayChange = _this$props.onDayChange, isDisabled = _this$props.isDisabled, isBordered = _this$props.isBordered, isSelected = _this$props.isSelected;
      var calendarHeight = this.calendarHeight, monthsSelectionSpace = this.monthsSelectionSpace, monthsSelectionOffset = this.monthsSelectionOffset;
      var _locales$locale = locales_default[locale2], weekdaysOrdering = _locales$locale.weekdaysOrdering, weekdays = _locales$locale.weekdays;
      return (0, import_jsx_runtime16.jsxs)("div", {
        className: "n3__date-picker-calendar",
        children: [(0, import_jsx_runtime15.jsx)("div", {
          className: "n3__date-picker-calendar__weekdays",
          children: weekdaysOrdering.map(function(weekdayIndex) {
            return (0, import_jsx_runtime15.jsx)("span", {
              className: (0, import_classnames6.default)("n3__date-picker-calendar__weekday", {
                "n3__date-picker-calendar__weekday_weekend": isWeekend(weekdayIndex)
              }),
              children: weekdays[weekdayIndex]
            }, weekdayIndex);
          })
        }), (0, import_jsx_runtime16.jsxs)("div", {
          ref: this.datesRef,
          className: "n3__date-picker-calendar__dates",
          children: [(0, import_jsx_runtime15.jsx)(days_default, {
            locale: locale2,
            selected,
            isSelected,
            isBordered,
            isDisabled,
            onDayChange,
            onScroll: onChange,
            calendarHeight
          }), (0, import_jsx_runtime15.jsx)(months_default, {
            locale: locale2,
            selected,
            format: "MMM",
            onChange,
            onScroll: onChange,
            isDisabled,
            calendarHeight,
            offset: monthsSelectionOffset,
            space: monthsSelectionSpace
          }), (0, import_jsx_runtime15.jsx)(years_default, {
            locale: locale2,
            selected,
            onScroll: onChange,
            isDisabled
          })]
        })]
      });
    }
  }]);
  return Calendar2;
}(import_react31.Component);
var calendar_default = Calendar;

// node_modules/@n3/react-date-picker/es/menuContent.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var getState = function getState2(props) {
  var startDate = props.startDate, endDate = props.endDate, displayFormat3 = props.displayFormat, locale2 = props.locale, show = props.show, parseDate3 = props.parseDate, defaultFocus = props.defaultFocus;
  var _ref = Array.isArray(defaultFocus) ? _toConsumableArray(defaultFocus) : defaultFocus ? [defaultFocus] : [new Date()], _ref2 = _slicedToArray(_ref, 1), startDateFocus = _ref2[0];
  var selected = startDate || startDateFocus;
  return {
    focusField: "from",
    from: displayFormat3(startDate, locale2),
    to: displayFormat3(endDate, locale2),
    selected,
    show
  };
};
var MenuContent = function(_Component) {
  _inherits(MenuContent2, _Component);
  var _super = _createSuper(MenuContent2);
  function MenuContent2(props) {
    var _this;
    _classCallCheck(this, MenuContent2);
    _this = _super.call(this, props);
    _defineProperty(_assertThisInitialized(_this), "onFocus", function(_ref3) {
      var name = _ref3.target.name;
      var _this$props = _this.props, startDate = _this$props.startDate, endDate = _this$props.endDate, parseDate3 = _this$props.parseDate, locale2 = _this$props.locale, defaultFocus = _this$props.defaultFocus;
      var _ref4 = Array.isArray(defaultFocus) ? _toConsumableArray(defaultFocus) : defaultFocus ? [defaultFocus] : [new Date(), new Date()], _ref5 = _slicedToArray(_ref4, 2), startDateFocus = _ref5[0], endDateFocus = _ref5[1];
      var selected = name === "from" ? startDate : endDate;
      var defaultSelected = name === "from" ? startDateFocus : endDateFocus;
      _this.setState({
        focusField: name,
        selected: selected || defaultSelected
      });
    });
    _defineProperty(_assertThisInitialized(_this), "onClick", function() {
      var _ref7 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(_ref6) {
        var target, range, _ref8, name;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                target = _ref6.target;
                range = _this.props.range;
                _ref8 = target, name = _ref8.name;
                if (!range) {
                  _context.next = 6;
                  break;
                }
                _context.next = 6;
                return _this.focusOnField(name);
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return function(_x) {
        return _ref7.apply(this, arguments);
      };
    }());
    _defineProperty(_assertThisInitialized(_this), "onInputChange", function() {
      var _ref10 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(_ref9) {
        var value, _this$props2, parseDate3, locale2, selected;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                value = _ref9.target.value;
                _this$props2 = _this.props, parseDate3 = _this$props2.parseDate, locale2 = _this$props2.locale;
                _context2.next = 4;
                return _this.setState(function(_ref11) {
                  var focusField = _ref11.focusField;
                  return _defineProperty({}, focusField, value);
                });
              case 4:
                if (!_this.isValid(value)) {
                  _context2.next = 8;
                  break;
                }
                selected = parseDate3(value, locale2);
                _context2.next = 8;
                return _this.setState({
                  selected
                });
              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      return function(_x2) {
        return _ref10.apply(this, arguments);
      };
    }());
    _defineProperty(_assertThisInitialized(_this), "onKeyDown", function() {
      var _ref14 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(_ref13) {
        var target, key, _this$props3, parseDate3, locale2, range, _ref15, name, value, selectionStart;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref13.target, key = _ref13.key;
                _this$props3 = _this.props, parseDate3 = _this$props3.parseDate, locale2 = _this$props3.locale, range = _this$props3.range;
                _ref15 = target, name = _ref15.name, value = _ref15.value, selectionStart = _ref15.selectionStart;
                _context3.t0 = key;
                _context3.next = _context3.t0 === "Enter" ? 6 : _context3.t0 === "Tab" ? 6 : _context3.t0 === "ArrowLeft" ? 10 : _context3.t0 === "ArrowRight" ? 16 : 22;
                break;
              case 6:
                if (!_this.isValid(value)) {
                  _context3.next = 9;
                  break;
                }
                _context3.next = 9;
                return _this.onDayChange(parseDate3(value, locale2));
              case 9:
                return _context3.abrupt("break", 23);
              case 10:
                if (!(range && name === "to" && selectionStart === 0)) {
                  _context3.next = 15;
                  break;
                }
                _context3.next = 13;
                return _this.setState({
                  focusField: "from"
                });
              case 13:
                _context3.next = 15;
                return _this.focusOnField("from");
              case 15:
                return _context3.abrupt("break", 23);
              case 16:
                if (!(range && name === "from" && selectionStart !== null && selectionStart > value.length - 1)) {
                  _context3.next = 21;
                  break;
                }
                _context3.next = 19;
                return _this.setState({
                  focusField: "to"
                });
              case 19:
                _context3.next = 21;
                return _this.focusOnField("to");
              case 21:
                return _context3.abrupt("break", 23);
              case 22:
                return _context3.abrupt("break", 23);
              case 23:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));
      return function(_x3) {
        return _ref14.apply(this, arguments);
      };
    }());
    _defineProperty(_assertThisInitialized(_this), "onDayChange", function() {
      var _ref16 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(date) {
        var _this$props4, close, displayFormat3, locale2, onChange, range, focusField, _this$props5, startDate, endDate;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _this$props4 = _this.props, close = _this$props4.close, displayFormat3 = _this$props4.displayFormat, locale2 = _this$props4.locale, onChange = _this$props4.onChange, range = _this$props4.range;
                focusField = _this.state.focusField;
                _context4.next = 4;
                return onChange(_this.formatDateValue(focusField, date));
              case 4:
                _this$props5 = _this.props, startDate = _this$props5.startDate, endDate = _this$props5.endDate;
                _context4.next = 7;
                return _this.setState({
                  from: displayFormat3(startDate, locale2),
                  to: displayFormat3(endDate, locale2),
                  selected: date,
                  focusField: range ? "to" : "from"
                });
              case 7:
                if (!_this.shouldCloseMenu(focusField)) {
                  _context4.next = 10;
                  break;
                }
                _context4.next = 10;
                return close();
              case 10:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));
      return function(_x4) {
        return _ref16.apply(this, arguments);
      };
    }());
    _defineProperty(_assertThisInitialized(_this), "onSelectedChange", function(selected) {
      _this.setState({
        selected
      });
    });
    _defineProperty(_assertThisInitialized(_this), "focusOnField", function() {
      var _ref17 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(name) {
        var fieldName, valueStr, _this$props6, parseDate3, displayFormat3, _locale, onChange, startDateProp, endDateProp, _value, fieldProp, _this$props7, startDate, endDate;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                fieldName = name === "from" ? "to" : "from";
                valueStr = _this.state[fieldName];
                if (!_this.isValid(valueStr)) {
                  _context5.next = 13;
                  break;
                }
                _this$props6 = _this.props, parseDate3 = _this$props6.parseDate, displayFormat3 = _this$props6.displayFormat, _locale = _this$props6.locale, onChange = _this$props6.onChange, startDateProp = _this$props6.startDate, endDateProp = _this$props6.endDate;
                _value = parseDate3(valueStr, _locale);
                fieldProp = fieldName === "from" ? startDateProp : endDateProp;
                if (!(_value && fieldProp && isSameDay(_value, fieldProp))) {
                  _context5.next = 8;
                  break;
                }
                return _context5.abrupt("return");
              case 8:
                _context5.next = 10;
                return onChange(_this.formatDateValue(fieldName, _value));
              case 10:
                _this$props7 = _this.props, startDate = _this$props7.startDate, endDate = _this$props7.endDate;
                _context5.next = 13;
                return _this.setState({
                  from: displayFormat3(startDate, _locale),
                  to: displayFormat3(endDate, _locale)
                });
              case 13:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));
      return function(_x5) {
        return _ref17.apply(this, arguments);
      };
    }());
    _defineProperty(_assertThisInitialized(_this), "shouldCloseMenu", function(focusField) {
      var _this$props8 = _this.props, range = _this$props8.range, startDate = _this$props8.startDate, endDate = _this$props8.endDate;
      var isFilledField = Boolean(range ? startDate && endDate : startDate);
      var isLastField = range ? focusField === "to" : focusField === "from";
      return isFilledField && isLastField;
    });
    _defineProperty(_assertThisInitialized(_this), "isSelected", function(day) {
      var _this$props9 = _this.props, range = _this$props9.range, startDate = _this$props9.startDate, endDate = _this$props9.endDate;
      if (!day) {
        return false;
      }
      if (range) {
        if (!startDate) {
          if (!endDate) {
            return false;
          }
          return isSameDay(endDate, day);
        }
        if (!endDate) {
          return isSameDay(startDate, day);
        }
        return (isSameDay(endDate, day) || isAfter(endDate, day)) && (isSameDay(startDate, day) || isBefore(startDate, day));
      }
      return startDate ? isSameDay(startDate, day) : false;
    });
    _defineProperty(_assertThisInitialized(_this), "isBordered", function(day) {
      var _this$props10 = _this.props, startDate = _this$props10.startDate, endDate = _this$props10.endDate;
      if (!day) {
        return false;
      }
      return !!startDate && isSameDay(startDate, day) || !!endDate && isSameDay(endDate, day);
    });
    _defineProperty(_assertThisInitialized(_this), "isDisabled", function(day, checkEqual) {
      var _this$props11 = _this.props, minDate = _this$props11.minDate, maxDate = _this$props11.maxDate, isDateDisabled = _this$props11.isDateDisabled;
      if (!day) {
        return true;
      }
      if (isDateDisabled !== null && isDateDisabled !== void 0 && isDateDisabled(day)) {
        return true;
      }
      var isValueAfterMinDate = !minDate || checkEqual(day, minDate) || isAfter(day, minDate);
      var isValueBeforeMaxDate = !maxDate || checkEqual(day, maxDate) || isBefore(day, maxDate);
      return !isValueAfterMinDate || !isValueBeforeMaxDate;
    });
    _defineProperty(_assertThisInitialized(_this), "hasFocus", function(name) {
      var show = _this.props.show;
      var focusField = _this.state.focusField;
      return show && focusField === name;
    });
    _this.state = getState(props);
    return _this;
  }
  _createClass(MenuContent2, [{
    key: "formatDateValue",
    value: function formatDateValue(fieldName, value) {
      var _this$props12 = this.props, range = _this$props12.range, startDate = _this$props12.startDate, endDate = _this$props12.endDate;
      if (range) {
        if (fieldName === "from") {
          var isSwapped = value && endDate && isBefore(endDate, value);
          return {
            from: isSwapped ? endDate : value,
            to: isSwapped ? value : endDate
          };
        }
        if (fieldName === "to") {
          var _isSwapped = !startDate || startDate && value && isAfter(startDate, value);
          return {
            from: _isSwapped ? value : startDate,
            to: _isSwapped ? startDate : value
          };
        }
      }
      return value;
    }
  }, {
    key: "isValid",
    value: function isValid2(value) {
      var _this$props13 = this.props, parseDate3 = _this$props13.parseDate, minDate = _this$props13.minDate, maxDate = _this$props13.maxDate, locale2 = _this$props13.locale;
      var date = parseDate3(value, locale2);
      var isDateValid = !!date;
      var isValueAfterMinDate = isDateValid && (!minDate || isSameDay(date, minDate) || isAfter(date, minDate));
      var isValueBeforeMaxDate = isDateValid && (!maxDate || isSameDay(date, maxDate) || isBefore(date, maxDate));
      return isDateValid && isValueAfterMinDate && isValueBeforeMaxDate;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props14 = this.props, range = _this$props14.range, show = _this$props14.show, domProps = _this$props14.domProps, locale2 = _this$props14.locale;
      var _this$state = this.state, inputFromValue = _this$state.from, inputToValue = _this$state.to, selected = _this$state.selected;
      return (0, import_jsx_runtime19.jsxs)("div", _objectSpread2(_objectSpread2({}, domProps), {}, {
        className: (0, import_classnames7.default)("n3__date-picker-menu", {
          "n3__date-picker-menu_hidden": !show
        }),
        children: [(0, import_jsx_runtime19.jsxs)("div", {
          className: "n3__date-picker-menu__inputs",
          children: [(0, import_jsx_runtime17.jsx)(input_default, {
            name: "from",
            value: inputFromValue,
            hasFocus: this.hasFocus,
            onChange: this.onInputChange,
            onFocus: this.onFocus,
            onClick: this.onClick,
            onKeyDown: this.onKeyDown
          }), range && (0, import_jsx_runtime19.jsxs)(import_jsx_runtime18.Fragment, {
            children: [(0, import_jsx_runtime17.jsx)("div", {
              className: "n3__date-picker-menu__input-dash",
              children: "\u2013"
            }), (0, import_jsx_runtime17.jsx)(input_default, {
              name: "to",
              value: inputToValue,
              hasFocus: this.hasFocus,
              onChange: this.onInputChange,
              onFocus: this.onFocus,
              onClick: this.onClick,
              onKeyDown: this.onKeyDown
            })]
          })]
        }), (0, import_jsx_runtime17.jsx)(calendar_default, {
          locale: locale2,
          selected,
          onChange: this.onSelectedChange,
          onDayChange: this.onDayChange,
          isDisabled: this.isDisabled,
          isSelected: this.isSelected,
          isBordered: this.isBordered
        })]
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      var show = props.show;
      if (show !== state.show) {
        return show ? getState(props) : {
          show
        };
      }
      return null;
    }
  }]);
  return MenuContent2;
}(import_react32.Component);
_defineProperty(MenuContent, "defaultProps", {
  range: false,
  startDate: null,
  endDate: null,
  minDate: null,
  maxDate: null,
  defaultFocus: null,
  domProps: {},
  style: {}
});
var menuContent_default = MenuContent;

// node_modules/@n3/react-date-picker/es/menu.js
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var _excluded2 = ["popperConfig", "show", "containerRef"];
var modifiers = [{
  name: "flip",
  options: {
    fallbackPlacements: ["bottom", "top", "left", "right"]
  }
}];
function Menu(_ref) {
  var popperConfig = _ref.popperConfig, showProp = _ref.show, containerRef = _ref.containerRef, rest = _objectWithoutProperties(_ref, _excluded2);
  var _useDropdownMenu = useDropdownMenu({
    show: showProp,
    popperConfig: _objectSpread2({
      modifiers
    }, popperConfig)
  }), _useDropdownMenu2 = _slicedToArray(_useDropdownMenu, 2), domProps = _useDropdownMenu2[0], _useDropdownMenu2$ = _useDropdownMenu2[1], hasShown = _useDropdownMenu2$.hasShown, show = _useDropdownMenu2$.show, toggle = _useDropdownMenu2$.toggle;
  var close = (0, import_react33.useCallback)(function() {
    if (toggle) {
      toggle(false);
    }
  }, [toggle]);
  if (hasShown) {
    return (0, import_jsx_runtime20.jsx)(PortalCompat_default, {
      node: containerRef,
      children: (0, import_jsx_runtime20.jsx)(menuContent_default, _objectSpread2(_objectSpread2({
        domProps
      }, rest), {}, {
        show,
        close
      }))
    });
  }
  return null;
}
Menu.defaultProps = {
  popperConfig: {},
  show: false,
  containerRef: document.body
};
var menu_default = Menu;

// node_modules/@n3/react-date-picker/es/defaults/parseDate.js
var parseDate = function parseDate2(date, locale2) {
  var referenceDate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : new Date();
  var match2 = date.match(/(.)(\d{1,4})$/);
  var isSetFullYear = false;
  if (match2) {
    var separator = match2[1];
    var year = match2[2];
    isSetFullYear = !!separator && date.split(separator).length === 3 && year.length === 3;
  }
  var dateStrWithFullYear = isSetFullYear ? "".concat(date, "0") : date;
  var _locales$locale = locales_default[locale2], formats = _locales$locale.formats, dateFnsLocale = _locales$locale.dateFnsLocale;
  for (var i = 0, l = formats.length; i < l; ++i) {
    var format2 = formats[i];
    var parsed = parse(dateStrWithFullYear, format2, referenceDate, {
      locale: dateFnsLocale
    });
    if (isValid(parsed)) {
      return parsed;
    }
  }
  return null;
};
var parseDate_default = parseDate;

// node_modules/@n3/react-date-picker/es/defaults/displayFormat.js
var displayFormat = function displayFormat2(date) {
  var locale2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "ru";
  if (date) {
    return format(date, locales_default[locale2].displayFormat);
  }
  return "";
};
var displayFormat_default = displayFormat;

// node_modules/@n3/react-date-picker/es/index.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var DatePicker = function(_PureComponent) {
  _inherits(DatePicker2, _PureComponent);
  var _super = _createSuper(DatePicker2);
  function DatePicker2() {
    var _this;
    _classCallCheck(this, DatePicker2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "state", {
      show: false
    });
    _defineProperty(_assertThisInitialized(_this), "onToggle", function(isOpened) {
      _this.setState({
        show: isOpened
      });
    });
    _defineProperty(_assertThisInitialized(_this), "onClear", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
      var _this$props, range, onChange;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _this$props = _this.props, range = _this$props.range, onChange = _this$props.onChange;
              _context.next = 3;
              return _this.setState({
                show: false
              });
            case 3:
              _context.next = 5;
              return onChange(range ? {
                from: null,
                to: null
              } : null);
            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));
    _defineProperty(_assertThisInitialized(_this), "parseDate", function(value) {
      var _this$props2 = _this.props, parseDate3 = _this$props2.parseDate, locale2 = _this$props2.locale;
      if (!value) {
        return null;
      }
      return parseDate3(value, locale2);
    });
    _defineProperty(_assertThisInitialized(_this), "parseDateSingle", function(value) {
      var parsed = _this.parseDate(value);
      if (Array.isArray(parsed)) {
        return parsed[0];
      }
      return parsed;
    });
    _defineProperty(_assertThisInitialized(_this), "renderDropdown", function() {
      var _this$props3 = _this.props, range = _this$props3.range, from = _this$props3.from, to = _this$props3.to, value = _this$props3.value, locale2 = _this$props3.locale, displayFormat3 = _this$props3.displayFormat, className = _this$props3.className, minDate = _this$props3.minDate, maxDate = _this$props3.maxDate, onChange = _this$props3.onChange, defaultFocus = _this$props3.defaultFocus, popperConfig = _this$props3.popperConfig, containerRef = _this$props3.containerRef, isDateDisabled = _this$props3.isDateDisabled;
      var startDate = range ? from : value;
      var endDate = range ? to : null;
      var commonProps = {
        startDate: startDate || null,
        endDate: endDate || null,
        range: range || false,
        locale: hasSupportLocal(locale2 || defaultLocal) && locale2 || defaultLocal,
        displayFormat: displayFormat3 || displayFormat_default
      };
      return (0, import_jsx_runtime22.jsxs)("div", {
        className: (0, import_classnames8.default)("n3-date-picker", className),
        children: [(0, import_jsx_runtime21.jsx)(field_default, _objectSpread2(_objectSpread2({}, commonProps), {}, {
          canClear: _this.canClear(),
          onClear: _this.onClear
        })), (0, import_jsx_runtime21.jsx)(menu_default, _objectSpread2(_objectSpread2({}, commonProps), {}, {
          onChange,
          minDate,
          maxDate,
          defaultFocus,
          popperConfig,
          parseDate: _this.parseDateSingle,
          containerRef,
          isDateDisabled
        }))]
      });
    });
    return _this;
  }
  _createClass(DatePicker2, [{
    key: "canClear",
    value: function canClear() {
      var _this$props4 = this.props, clear = _this$props4.clear, range = _this$props4.range, from = _this$props4.from, to = _this$props4.to, value = _this$props4.value;
      if (!clear) {
        return false;
      }
      if (range) {
        return Boolean(from) || Boolean(to);
      }
      return Boolean(value);
    }
  }, {
    key: "render",
    value: function render() {
      var show = this.state.show;
      return (0, import_jsx_runtime21.jsx)(Dropdown_default, {
        drop: "down",
        show,
        onToggle: this.onToggle,
        children: this.renderDropdown()
      });
    }
  }]);
  return DatePicker2;
}(import_react34.PureComponent);
_defineProperty(DatePicker, "defaultProps", {
  value: null,
  from: null,
  to: null,
  range: false,
  clear: false,
  locale: defaultLocal,
  parseDate: parseDate_default,
  displayFormat: displayFormat_default,
  minDate: null,
  maxDate: null,
  className: null,
  defaultFocus: null,
  containerRef: null,
  isDateDisabled: null
});
_defineProperty(DatePicker, "displayName", "ReactDatePicker");
var es_default = DatePicker;

// dep:@n3_react-date-picker
var n3_react_date_picker_default = es_default;
export {
  n3_react_date_picker_default as default
};
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=@n3_react-date-picker.js.map
