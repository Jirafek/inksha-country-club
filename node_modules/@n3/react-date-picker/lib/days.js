"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _isSameDay = _interopRequireDefault(require("date-fns/isSameDay"));

var _subMonths = _interopRequireDefault(require("date-fns/subMonths"));

var _getDate = _interopRequireDefault(require("./defaults/getDate"));

var _scrollArea = _interopRequireDefault(require("./scrollArea"));

var _day = _interopRequireDefault(require("./day"));

var _getMonthHeight = _interopRequireDefault(require("./utils/getMonthHeight"));

var _createMonthDays = _interopRequireDefault(require("./utils/createMonthDays"));

var _getOffset = _interopRequireDefault(require("./utils/getOffset"));

var _jsxRuntime = require("react/jsx-runtime");

var getDaysRefOffset = function getDaysRefOffset(calendarHeight, selected) {
  return calendarHeight / 2 - (0, _getMonthHeight["default"])((0, _subMonths["default"])(selected, 1)) - (0, _getMonthHeight["default"])((0, _subMonths["default"])(selected, 2)) + (0, _getOffset["default"])(selected);
};

var Days = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(Days, _Component);

  var _super = (0, _createSuper2["default"])(Days);

  function Days() {
    var _this;

    (0, _classCallCheck2["default"])(this, Days);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (deltaY) {
      var _this$props = _this.props,
          selected = _this$props.selected,
          onScroll = _this$props.onScroll,
          getDate = _this$props.getDate;

      if (getDate && selected) {
        var date = getDate(selected, deltaY);
        onScroll(date);
      }
    });
    return _this;
  }

  (0, _createClass2["default"])(Days, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          selected = _this$props2.selected,
          isSelected = _this$props2.isSelected,
          isBordered = _this$props2.isBordered,
          isDisabled = _this$props2.isDisabled,
          onDayChange = _this$props2.onDayChange,
          calendarHeight = _this$props2.calendarHeight,
          locale = _this$props2.locale;
      var months = selected ? (0, _createMonthDays["default"])((0, _subMonths["default"])(selected, 2), 5, locale) : [];
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "n3__date-picker__days-wrapper",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_scrollArea["default"], {
          className: "n3__date-picker__days",
          style: {
            marginTop: selected ? getDaysRefOffset(calendarHeight, selected) : undefined
          },
          onChange: this.handleChange,
          children: months.map(function (_ref, i) {
            var monthStr = _ref.monthStr,
                days = _ref.days;
            return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "n3__date-picker__days-month",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "n3__date-picker__days-month-title",
                children: monthStr
              }), days.map(function (week, j) {
                return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                  className: "n3__date-picker__days-week",
                  children: week.map(function (value, k) {
                    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_day["default"], {
                      value: value,
                      isSelected: isSelected(value),
                      isBordered: isBordered(value),
                      isDisabled: value ? isDisabled(value, _isSameDay["default"]) : true,
                      onChange: onDayChange
                    }, k);
                  })
                }, j);
              })]
            }, i);
          })
        })
      });
    }
  }]);
  return Days;
}(_react.Component);

(0, _defineProperty2["default"])(Days, "defaultProps", {
  getDate: _getDate["default"]
});
var _default = Days;
exports["default"] = _default;