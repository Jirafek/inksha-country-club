"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = require("react");

var _DropdownMenu = require("react-overlays/DropdownMenu");

var _reactPortal = require("react-portal");

var _menuContent = _interopRequireDefault(require("./menuContent"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["popperConfig", "show", "containerRef"];
var modifiers = [{
  name: 'flip',
  options: {
    fallbackPlacements: ['bottom', 'top', 'left', 'right']
  }
}];

function Menu(_ref) {
  var popperConfig = _ref.popperConfig,
      showProp = _ref.show,
      containerRef = _ref.containerRef,
      rest = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var _useDropdownMenu = (0, _DropdownMenu.useDropdownMenu)({
    show: showProp,
    popperConfig: (0, _objectSpread2["default"])({
      modifiers: modifiers
    }, popperConfig)
  }),
      _useDropdownMenu2 = (0, _slicedToArray2["default"])(_useDropdownMenu, 2),
      domProps = _useDropdownMenu2[0],
      _useDropdownMenu2$ = _useDropdownMenu2[1],
      hasShown = _useDropdownMenu2$.hasShown,
      show = _useDropdownMenu2$.show,
      toggle = _useDropdownMenu2$.toggle;

  var close = (0, _react.useCallback)(function () {
    if (toggle) {
      toggle(false);
    }
  }, [toggle]);

  if (hasShown) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactPortal.Portal, {
      node: containerRef,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_menuContent["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
        domProps: domProps
      }, rest), {}, {
        show: show,
        close: close
      }))
    });
  }

  return null;
}

Menu.defaultProps = {
  popperConfig: {},
  show: false,
  containerRef: document.body
};
var _default = Menu;
exports["default"] = _default;