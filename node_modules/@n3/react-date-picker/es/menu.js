import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["popperConfig", "show", "containerRef"];
import { useCallback } from 'react';
import { useDropdownMenu } from 'react-overlays/DropdownMenu';
import { Portal } from 'react-portal';
import MenuContent from "./menuContent";
import { jsx as _jsx } from "react/jsx-runtime";
var modifiers = [{
  name: 'flip',
  options: {
    fallbackPlacements: ['bottom', 'top', 'left', 'right']
  }
}];

function Menu(_ref) {
  var popperConfig = _ref.popperConfig,
      showProp = _ref.show,
      containerRef = _ref.containerRef,
      rest = _objectWithoutProperties(_ref, _excluded);

  var _useDropdownMenu = useDropdownMenu({
    show: showProp,
    popperConfig: _objectSpread({
      modifiers: modifiers
    }, popperConfig)
  }),
      _useDropdownMenu2 = _slicedToArray(_useDropdownMenu, 2),
      domProps = _useDropdownMenu2[0],
      _useDropdownMenu2$ = _useDropdownMenu2[1],
      hasShown = _useDropdownMenu2$.hasShown,
      show = _useDropdownMenu2$.show,
      toggle = _useDropdownMenu2$.toggle;

  var close = useCallback(function () {
    if (toggle) {
      toggle(false);
    }
  }, [toggle]);

  if (hasShown) {
    return /*#__PURE__*/_jsx(Portal, {
      node: containerRef,
      children: /*#__PURE__*/_jsx(MenuContent, _objectSpread(_objectSpread({
        domProps: domProps
      }, rest), {}, {
        show: show,
        close: close
      }))
    });
  }

  return null;
}

Menu.defaultProps = {
  popperConfig: {},
  show: false,
  containerRef: document.body
};
export default Menu;