"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _addMonths = _interopRequireDefault(require("date-fns/addMonths"));

var _endOfYear = _interopRequireDefault(require("date-fns/endOfYear"));

var _getDayOfYear = _interopRequireDefault(require("date-fns/getDayOfYear"));

var _isSameMonth = _interopRequireDefault(require("date-fns/isSameMonth"));

var _setDate = _interopRequireDefault(require("date-fns/setDate"));

var _subMonths = _interopRequireDefault(require("date-fns/subMonths"));

var _month = _interopRequireDefault(require("./month"));

var _scrollArea = _interopRequireDefault(require("./scrollArea"));

var _getMonthsOfYear = _interopRequireDefault(require("./utils/getMonthsOfYear"));

var _jsxRuntime = require("react/jsx-runtime");

var Months = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2["default"])(Months, _PureComponent);

  var _super = (0, _createSuper2["default"])(Months);

  function Months() {
    var _this;

    (0, _classCallCheck2["default"])(this, Months);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (deltaY) {
      var _this$props = _this.props,
          selected = _this$props.selected,
          onScroll = _this$props.onScroll;

      if (!selected) {
        return;
      }

      var nextSelected = deltaY > 0 ? (0, _subMonths["default"])(selected, 1) : (0, _addMonths["default"])(selected, 1);
      onScroll(nextSelected);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "isSelected", function (date) {
      var selected = _this.props.selected;

      if (!selected) {
        return false;
      }

      return (0, _isSameMonth["default"])(selected, date);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getSelection", function (selected) {
      var _this$props2 = _this.props,
          calendarHeight = _this$props2.calendarHeight,
          offset = _this$props2.offset,
          space = _this$props2.space;

      if (!selected) {
        return [{}, {}];
      }

      var height = calendarHeight - 2 * space;
      var position = height * (0, _getDayOfYear["default"])((0, _setDate["default"])(selected, 15)) / (0, _getDayOfYear["default"])((0, _endOfYear["default"])(selected));
      var diff = space + position + offset - calendarHeight;
      return [{
        top: space,
        height: diff > 0 ? diff : 0
      }, {
        top: space + position - offset,
        height: Math.min(2 * offset, calendarHeight - (space + position - offset))
      }];
    });
    return _this;
  }

  (0, _createClass2["default"])(Months, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          selected = _this$props3.selected,
          isDisabled = _this$props3.isDisabled,
          onChange = _this$props3.onChange,
          locale = _this$props3.locale;
      var months = selected ? (0, _getMonthsOfYear["default"])(selected) : [];

      var _this$getSelection = this.getSelection(selected),
          _this$getSelection2 = (0, _slicedToArray2["default"])(_this$getSelection, 2),
          selectionTopStyles = _this$getSelection2[0],
          selectionBottomStyles = _this$getSelection2[1];

      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_scrollArea["default"], {
        className: "n3__date-picker__months",
        onChange: this.handleChange,
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "n3__date-picker__selection",
          style: selectionTopStyles
        }), months.map(function (value, i) {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_month["default"], {
            value: value,
            onChange: onChange,
            isCurrent: (0, _isSameMonth["default"])(value, new Date()),
            isDisabled: isDisabled(value, _isSameMonth["default"]),
            isSelected: _this2.isSelected(value),
            locale: locale
          }, i);
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "n3__date-picker__selection",
          style: selectionBottomStyles
        })]
      });
    }
  }]);
  return Months;
}(_react.PureComponent);

var _default = Months;
exports["default"] = _default;