import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _regeneratorRuntime from "@babel/runtime/helpers/regeneratorRuntime";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { Component } from 'react';
import isAfter from 'date-fns/isAfter';
import isBefore from 'date-fns/isBefore';
import isSameDay from 'date-fns/isSameDay';
import cx from 'classnames';
import Input from "./input";
import Calendar from "./calendar";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var getState = function getState(props) {
  var startDate = props.startDate,
      endDate = props.endDate,
      displayFormat = props.displayFormat,
      locale = props.locale,
      show = props.show,
      parseDate = props.parseDate,
      defaultFocus = props.defaultFocus;

  var _ref = Array.isArray(defaultFocus) ? _toConsumableArray(defaultFocus) : defaultFocus ? [defaultFocus] : [new Date()],
      _ref2 = _slicedToArray(_ref, 1),
      startDateFocus = _ref2[0];

  var selected = startDate || startDateFocus;
  return {
    focusField: 'from',
    from: displayFormat(startDate, locale),
    to: displayFormat(endDate, locale),
    selected: selected,
    show: show
  };
};

var MenuContent = /*#__PURE__*/function (_Component) {
  _inherits(MenuContent, _Component);

  var _super = _createSuper(MenuContent);

  function MenuContent(props) {
    var _this;

    _classCallCheck(this, MenuContent);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "onFocus", function (_ref3) {
      var name = _ref3.target.name;
      var _this$props = _this.props,
          startDate = _this$props.startDate,
          endDate = _this$props.endDate,
          parseDate = _this$props.parseDate,
          locale = _this$props.locale,
          defaultFocus = _this$props.defaultFocus;

      var _ref4 = Array.isArray(defaultFocus) ? _toConsumableArray(defaultFocus) : defaultFocus ? [defaultFocus] : [new Date(), new Date()],
          _ref5 = _slicedToArray(_ref4, 2),
          startDateFocus = _ref5[0],
          endDateFocus = _ref5[1];

      var selected = name === 'from' ? startDate : endDate;
      var defaultSelected = name === 'from' ? startDateFocus : endDateFocus;

      _this.setState({
        focusField: name,
        selected: selected || defaultSelected
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onClick", /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref6) {
        var target, range, _ref8, name;

        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                target = _ref6.target;
                range = _this.props.range;
                _ref8 = target, name = _ref8.name;

                if (!range) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return _this.focusOnField(name);

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref7.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "onInputChange", /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref9) {
        var value, _this$props2, parseDate, locale, selected;

        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                value = _ref9.target.value;
                _this$props2 = _this.props, parseDate = _this$props2.parseDate, locale = _this$props2.locale;
                _context2.next = 4;
                return _this.setState(function (_ref11) {
                  var focusField = _ref11.focusField;
                  return _defineProperty({}, focusField, value);
                });

              case 4:
                if (!_this.isValid(value)) {
                  _context2.next = 8;
                  break;
                }

                selected = parseDate(value, locale);
                _context2.next = 8;
                return _this.setState({
                  selected: selected
                });

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x2) {
        return _ref10.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "onKeyDown", /*#__PURE__*/function () {
      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref13) {
        var target, key, _this$props3, parseDate, locale, range, _ref15, name, value, selectionStart;

        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref13.target, key = _ref13.key;
                _this$props3 = _this.props, parseDate = _this$props3.parseDate, locale = _this$props3.locale, range = _this$props3.range;
                _ref15 = target, name = _ref15.name, value = _ref15.value, selectionStart = _ref15.selectionStart;
                _context3.t0 = key;
                _context3.next = _context3.t0 === 'Enter' ? 6 : _context3.t0 === 'Tab' ? 6 : _context3.t0 === 'ArrowLeft' ? 10 : _context3.t0 === 'ArrowRight' ? 16 : 22;
                break;

              case 6:
                if (!_this.isValid(value)) {
                  _context3.next = 9;
                  break;
                }

                _context3.next = 9;
                return _this.onDayChange(parseDate(value, locale));

              case 9:
                return _context3.abrupt("break", 23);

              case 10:
                if (!(range && name === 'to' && selectionStart === 0)) {
                  _context3.next = 15;
                  break;
                }

                _context3.next = 13;
                return _this.setState({
                  focusField: 'from'
                });

              case 13:
                _context3.next = 15;
                return _this.focusOnField('from');

              case 15:
                return _context3.abrupt("break", 23);

              case 16:
                if (!(range && name === 'from' && selectionStart !== null && selectionStart > value.length - 1)) {
                  _context3.next = 21;
                  break;
                }

                _context3.next = 19;
                return _this.setState({
                  focusField: 'to'
                });

              case 19:
                _context3.next = 21;
                return _this.focusOnField('to');

              case 21:
                return _context3.abrupt("break", 23);

              case 22:
                return _context3.abrupt("break", 23);

              case 23:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      return function (_x3) {
        return _ref14.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "onDayChange", /*#__PURE__*/function () {
      var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(date) {
        var _this$props4, close, displayFormat, locale, onChange, range, focusField, _this$props5, startDate, endDate;

        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _this$props4 = _this.props, close = _this$props4.close, displayFormat = _this$props4.displayFormat, locale = _this$props4.locale, onChange = _this$props4.onChange, range = _this$props4.range;
                focusField = _this.state.focusField;
                _context4.next = 4;
                return onChange(_this.formatDateValue(focusField, date));

              case 4:
                _this$props5 = _this.props, startDate = _this$props5.startDate, endDate = _this$props5.endDate;
                _context4.next = 7;
                return _this.setState({
                  from: displayFormat(startDate, locale),
                  to: displayFormat(endDate, locale),
                  selected: date,
                  focusField: range ? 'to' : 'from'
                });

              case 7:
                if (!_this.shouldCloseMenu(focusField)) {
                  _context4.next = 10;
                  break;
                }

                _context4.next = 10;
                return close();

              case 10:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      return function (_x4) {
        return _ref16.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "onSelectedChange", function (selected) {
      _this.setState({
        selected: selected
      });
    });

    _defineProperty(_assertThisInitialized(_this), "focusOnField", /*#__PURE__*/function () {
      var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(name) {
        var fieldName, valueStr, _this$props6, parseDate, displayFormat, _locale, onChange, startDateProp, endDateProp, _value, fieldProp, _this$props7, startDate, endDate;

        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                fieldName = name === 'from' ? 'to' : 'from';
                valueStr = _this.state[fieldName];

                if (!_this.isValid(valueStr)) {
                  _context5.next = 13;
                  break;
                }

                _this$props6 = _this.props, parseDate = _this$props6.parseDate, displayFormat = _this$props6.displayFormat, _locale = _this$props6.locale, onChange = _this$props6.onChange, startDateProp = _this$props6.startDate, endDateProp = _this$props6.endDate;
                _value = parseDate(valueStr, _locale);
                fieldProp = fieldName === 'from' ? startDateProp : endDateProp;

                if (!(_value && fieldProp && isSameDay(_value, fieldProp))) {
                  _context5.next = 8;
                  break;
                }

                return _context5.abrupt("return");

              case 8:
                _context5.next = 10;
                return onChange(_this.formatDateValue(fieldName, _value));

              case 10:
                _this$props7 = _this.props, startDate = _this$props7.startDate, endDate = _this$props7.endDate;
                _context5.next = 13;
                return _this.setState({
                  from: displayFormat(startDate, _locale),
                  to: displayFormat(endDate, _locale)
                });

              case 13:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      return function (_x5) {
        return _ref17.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "shouldCloseMenu", function (focusField) {
      var _this$props8 = _this.props,
          range = _this$props8.range,
          startDate = _this$props8.startDate,
          endDate = _this$props8.endDate;
      var isFilledField = Boolean(range ? startDate && endDate : startDate);
      var isLastField = range ? focusField === 'to' : focusField === 'from';
      return isFilledField && isLastField;
    });

    _defineProperty(_assertThisInitialized(_this), "isSelected", function (day) {
      var _this$props9 = _this.props,
          range = _this$props9.range,
          startDate = _this$props9.startDate,
          endDate = _this$props9.endDate;

      if (!day) {
        return false;
      }

      if (range) {
        if (!startDate) {
          if (!endDate) {
            return false;
          }

          return isSameDay(endDate, day);
        }

        if (!endDate) {
          return isSameDay(startDate, day);
        }

        return (isSameDay(endDate, day) || isAfter(endDate, day)) && (isSameDay(startDate, day) || isBefore(startDate, day));
      }

      return startDate ? isSameDay(startDate, day) : false;
    });

    _defineProperty(_assertThisInitialized(_this), "isBordered", function (day) {
      var _this$props10 = _this.props,
          startDate = _this$props10.startDate,
          endDate = _this$props10.endDate;

      if (!day) {
        return false;
      }

      return !!startDate && isSameDay(startDate, day) || !!endDate && isSameDay(endDate, day);
    });

    _defineProperty(_assertThisInitialized(_this), "isDisabled", function (day, checkEqual) {
      var _this$props11 = _this.props,
          minDate = _this$props11.minDate,
          maxDate = _this$props11.maxDate,
          isDateDisabled = _this$props11.isDateDisabled;

      if (!day) {
        return true;
      }

      if (isDateDisabled !== null && isDateDisabled !== void 0 && isDateDisabled(day)) {
        return true;
      }

      var isValueAfterMinDate = !minDate || checkEqual(day, minDate) || isAfter(day, minDate);
      var isValueBeforeMaxDate = !maxDate || checkEqual(day, maxDate) || isBefore(day, maxDate);
      return !isValueAfterMinDate || !isValueBeforeMaxDate;
    });

    _defineProperty(_assertThisInitialized(_this), "hasFocus", function (name) {
      var show = _this.props.show;
      var focusField = _this.state.focusField;
      return show && focusField === name;
    });

    _this.state = getState(props);
    return _this;
  }

  _createClass(MenuContent, [{
    key: "formatDateValue",
    value: function formatDateValue(fieldName, value) {
      var _this$props12 = this.props,
          range = _this$props12.range,
          startDate = _this$props12.startDate,
          endDate = _this$props12.endDate;

      if (range) {
        if (fieldName === 'from') {
          var isSwapped = value && endDate && isBefore(endDate, value);
          return {
            from: isSwapped ? endDate : value,
            to: isSwapped ? value : endDate
          };
        }

        if (fieldName === 'to') {
          var _isSwapped = !startDate || startDate && value && isAfter(startDate, value);

          return {
            from: _isSwapped ? value : startDate,
            to: _isSwapped ? startDate : value
          };
        }
      }

      return value;
    }
  }, {
    key: "isValid",
    value: function isValid(value) {
      var _this$props13 = this.props,
          parseDate = _this$props13.parseDate,
          minDate = _this$props13.minDate,
          maxDate = _this$props13.maxDate,
          locale = _this$props13.locale;
      var date = parseDate(value, locale);
      var isDateValid = !!date;
      var isValueAfterMinDate = isDateValid && (!minDate || isSameDay(date, minDate) || isAfter(date, minDate));
      var isValueBeforeMaxDate = isDateValid && (!maxDate || isSameDay(date, maxDate) || isBefore(date, maxDate));
      return isDateValid && isValueAfterMinDate && isValueBeforeMaxDate;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props14 = this.props,
          range = _this$props14.range,
          show = _this$props14.show,
          domProps = _this$props14.domProps,
          locale = _this$props14.locale;
      var _this$state = this.state,
          inputFromValue = _this$state.from,
          inputToValue = _this$state.to,
          selected = _this$state.selected;
      return /*#__PURE__*/_jsxs("div", _objectSpread(_objectSpread({}, domProps), {}, {
        className: cx('n3__date-picker-menu', {
          'n3__date-picker-menu_hidden': !show
        }),
        children: [/*#__PURE__*/_jsxs("div", {
          className: "n3__date-picker-menu__inputs",
          children: [/*#__PURE__*/_jsx(Input, {
            name: "from",
            value: inputFromValue,
            hasFocus: this.hasFocus,
            onChange: this.onInputChange,
            onFocus: this.onFocus,
            onClick: this.onClick,
            onKeyDown: this.onKeyDown
          }), range && /*#__PURE__*/_jsxs(_Fragment, {
            children: [/*#__PURE__*/_jsx("div", {
              className: "n3__date-picker-menu__input-dash",
              children: "\u2013"
            }), /*#__PURE__*/_jsx(Input, {
              name: "to",
              value: inputToValue,
              hasFocus: this.hasFocus,
              onChange: this.onInputChange,
              onFocus: this.onFocus,
              onClick: this.onClick,
              onKeyDown: this.onKeyDown
            })]
          })]
        }), /*#__PURE__*/_jsx(Calendar, {
          locale: locale,
          selected: selected,
          onChange: this.onSelectedChange,
          onDayChange: this.onDayChange,
          isDisabled: this.isDisabled,
          isSelected: this.isSelected,
          isBordered: this.isBordered
        })]
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      var show = props.show;

      if (show !== state.show) {
        return show ? getState(props) : {
          show: show
        };
      }

      return null;
    }
  }]);

  return MenuContent;
}(Component);

_defineProperty(MenuContent, "defaultProps", {
  range: false,
  startDate: null,
  endDate: null,
  minDate: null,
  maxDate: null,
  defaultFocus: null,
  domProps: {},
  style: {}
});

export default MenuContent;